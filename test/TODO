# $Id: TODO,v 11.41 2000/05/31 14:19:09 sue Exp $

Test that joins get optimized properly.  (After Dave adds said functionality
using the method in the previous item.)

Test recno get-by-number aspect of new off-page dup code, if it ever gets
called anywhere other than DB_FIRST.  If it doesn't, test DB_FIRST with
off-page dups.

dup_compare vs. bt_compare functions--are we using them right
in the Brave New World?  Come up with some way to test them!
Only ideas are 1.  Add a compare function under CONFIG_TEST in the
tcl sources themselves and 2. Write a small sample program to run/test
that has a compare function in it.

Run the verifier after each database is upgraded in the upgrade tests.

Upgrade-test the duplicate conversion code with a healthy size DB, in both
btree and hash.

Enhance CDB test:  off-page dups, dup'ed cursors, c_del-then-c_get
of different sorts.  [#1923]

Clean up replicate/repeat.

Enhance the env tests to use databases that are in subdirs of the
env's home directory.  [#2215]

Clean up "cleanup":  Right now, cleanup removes everything in TESTDIR
using filesystem rather than DB ops.  This is unsafe anytime an environment
persists across a call to cleanup, as in run_rpcmethod or run_envmethod
when a cleanup occurs in the middle of a test, or in the (desirable)
situation where we run all feasible access method tests in one env.
The suggested fix for this:
	- Go through tests and make sure there is only one cleanup call
	  per test, at the beginning.
	- To enable the above, make sure that if a file is reused on
	  either side of a currently-existing mid-test cleanup, we 
	  instead use DB_TRUNCATE or a new filename rather than a 
	  filesystem-level remove.
	- Make sure that one cleanup call removes only database and temp
	  files, not environment files.  Probably the best way to accomplish
	  this is to put any persistent environments in a different TESTDIR,
	  and then keep track of open databases in a global Tcl list which we
	  can use to berkdb dbremove the database files in the env.
		==> maybe we can patch berkdb_open to save work?
	- Database removal should be done with dbremove if possible 
	  (motivation for standardized db naming scheme).
	- Reworking of this should consider running RPC across machines
	  and that temp files are local, envs and dbs are remote, etc.

After clean up of "cleanup", make RPC work across machines.
