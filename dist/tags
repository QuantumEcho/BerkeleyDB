ALIGN	../include/db_int.h	/^#define	ALIGN(value, bound)	(((value) + (bound) - /
ALIGNP	../include/db_int.h	/^#define	ALIGNP(value, bound)	ALIGN((ALIGNTYPE)valu/
ALIGNTYPE	../include/db_int.h	/^#define	ALIGNTYPE		u_long$/
ALLOCPGNO	../include/hash.h	/^#define	ALLOCPGNO	0x60$/
ARGS_USAGE	../test/utils.c	/^#define ARGS_USAGE "args"$/
BADARG	../clib/getopt.c	/^#define	BADARG	(int)':'$/
BADCH	../clib/getopt.c	/^#define	BADCH	(int)'?'$/
BAD_KILLID	../lock/lock_deadlock.c	/^#define	BAD_KILLID	0xffffffff$/
BFMSG	../db185/db185.c	/^#define	BFMSG	"DB: DB 1.85's recno bfname field is/
BH_CALLPGIN	../include/mp.h	/^#define	BH_CALLPGIN	0x001		\/* Page needs to be re/
BH_DIRTY	../include/mp.h	/^#define	BH_DIRTY	0x002		\/* Page was modified. *\//
BH_DISCARD	../include/mp.h	/^#define	BH_DISCARD	0x004		\/* Page is useless. *\//
BH_LOCKED	../include/mp.h	/^#define	BH_LOCKED	0x008		\/* Page is locked (I\/O /
BH_TRASH	../include/mp.h	/^#define	BH_TRASH	0x010		\/* Page is garbage. *\/$/
BH_WRITE	../include/mp.h	/^#define	BH_WRITE	0x020		\/* Page scheduled for wri/
BINTERNAL_PSIZE	../include/db_page.h	/^#define	BINTERNAL_PSIZE(len)						\\$/
BINTERNAL_SIZE	../include/db_page.h	/^#define	BINTERNAL_SIZE(len)						\\$/
BI_DELETED	../include/btree.h	/^#define	BI_DELETED	0x01		\/* Key\/data pair only p/
BI_DOINCR	../include/btree.h	/^#define	BI_DOINCR	0x02		\/* Increment the record c/
BI_NEWKEY	../include/btree.h	/^#define	BI_NEWKEY	0x04		\/* New key. *\/$/
BKEYDATA_PSIZE	../include/db_page.h	/^#define	BKEYDATA_PSIZE(len)						\\$/
BKEYDATA_SIZE	../include/db_page.h	/^#define	BKEYDATA_SIZE(len)						\\$/
BOVERFLOW_PSIZE	../include/db_page.h	/^#define	BOVERFLOW_PSIZE							\\$/
BOVERFLOW_SIZE	../include/db_page.h	/^#define	BOVERFLOW_SIZE							\\$/
BTM_DUP	../include/db_page.h	/^#define	BTM_DUP		0x001	\/* 	  Duplicates. *\/$/
BTM_FIXEDLEN	../include/db_page.h	/^#define	BTM_FIXEDLEN	0x008	\/*	  Recno: fixed leng/
BTM_MASK	../include/db_page.h	/^#define	BTM_MASK	0x01f$/
BTM_RECNO	../include/db_page.h	/^#define	BTM_RECNO	0x002	\/*	  Recno tree. *\/$/
BTM_RECNUM	../include/db_page.h	/^#define	BTM_RECNUM	0x004	\/*	  Btree: maintain rec/
BTM_RENUMBER	../include/db_page.h	/^#define	BTM_RENUMBER	0x010	\/*	  Recno: renumber o/
BTREEMAGIC	../include/db_185.h	/^#define	BTREEMAGIC	0x053162$/
BTREEVERSION	../include/db_185.h	/^#define	BTREEVERSION	3$/
BT_STK_CLR	../include/btree.h	/^#define	BT_STK_CLR(c)							\\$/
BT_STK_ENTER	../include/btree.h	/^#define	BT_STK_ENTER(c, pagep, page_indx, lock, re/
BT_STK_POP	../include/btree.h	/^#define	BT_STK_POP(c)							\\$/
BT_STK_PUSH	../include/btree.h	/^#define	BT_STK_PUSH(c, pagep, page_indx, lock, ret/
BUCKET	../include/mp.h	/^#define	BUCKET(mp, mf_offset, pgno)					\\$/
BUCKET_INVALID	../include/hash.h	/^#define	BUCKET_INVALID	0xFFFFFFFF$/
BUCKET_TO_PAGE	../include/hash.h	/^#define	BUCKET_TO_PAGE(I, B) \\$/
B_DCLR	../include/db_page.h	/^#define	B_DCLR(t)	(t) &= ~B_DELETE$/
B_DELETE	../include/db_page.h	/^#define	B_DELETE	(0x80)$/
B_DISSET	../include/db_page.h	/^#define	B_DISSET(t)	((t) & B_DELETE)$/
B_DSET	../include/db_page.h	/^#define	B_DSET(t)	(t) |= B_DELETE$/
B_DUPLICATE	../include/db_page.h	/^#define	B_DUPLICATE	2	\/* Duplicate key\/data item/
B_KEYDATA	../include/db_page.h	/^#define	B_KEYDATA	1	\/* Key\/data item. *\/$/
B_OVERFLOW	../include/db_page.h	/^#define	B_OVERFLOW	3	\/* Overflow key\/data item. /
B_TSET	../include/db_page.h	/^#define	B_TSET(t, type, deleted) {					\\$/
B_TYPE	../include/db_page.h	/^#define	B_TYPE(t)	((t) & ~B_DELETE)$/
CD_CLR	../btree/bt_recno.c	/^#define	CD_CLR(dbp, cp) {						\\$/
CD_ISSET	../btree/bt_recno.c	/^#define	CD_ISSET(dbp, cp)						\\$/
CD_SET	../btree/bt_recno.c	/^#define	CD_SET(dbp, cp) {						\\$/
CHARKEY	../include/hash.h	/^#define	CHARKEY			"%$sniglet^&"$/
CIRCLEQ_END	../include/queue.h	/^#define	CIRCLEQ_END(head)		((void *)(head))$/
CIRCLEQ_ENTRY	../include/queue.h	/^#define CIRCLEQ_ENTRY(type)						\\$/
CIRCLEQ_FIRST	../include/queue.h	/^#define	CIRCLEQ_FIRST(head)		((head)->cqh_first)$/
CIRCLEQ_HEAD	../include/queue.h	/^#define CIRCLEQ_HEAD(name, type)					\\$/
CIRCLEQ_INIT	../include/queue.h	/^#define	CIRCLEQ_INIT(head) do {						\\$/
CIRCLEQ_INSERT_AFTER	../include/queue.h	/^#define CIRCLEQ_INSERT_AFTER(head, listelm, elm, f/
CIRCLEQ_INSERT_BEFORE	../include/queue.h	/^#define CIRCLEQ_INSERT_BEFORE(head, listelm, elm, /
CIRCLEQ_INSERT_HEAD	../include/queue.h	/^#define CIRCLEQ_INSERT_HEAD(head, elm, field) do {/
CIRCLEQ_INSERT_TAIL	../include/queue.h	/^#define CIRCLEQ_INSERT_TAIL(head, elm, field) do {/
CIRCLEQ_LAST	../include/queue.h	/^#define	CIRCLEQ_LAST(head)		((head)->cqh_last)$/
CIRCLEQ_NEXT	../include/queue.h	/^#define	CIRCLEQ_NEXT(elm, field)	((elm)->field.cqe/
CIRCLEQ_PREV	../include/queue.h	/^#define	CIRCLEQ_PREV(elm, field)	((elm)->field.cqe/
CIRCLEQ_REMOVE	../include/queue.h	/^#define	CIRCLEQ_REMOVE(head, elm, field) do {				/
CLEAR_MAP	../lock/lock_deadlock.c	/^#define	CLEAR_MAP(M, N) {						\\$/
CLR_MAP	../lock/lock_deadlock.c	/^#define	CLR_MAP(M, B)	(M[(B) \/ 32] &= ~(1 << ((B)/
COMPQUIET	../include/db_int.h	/^#define	COMPQUIET(n, v)	(n) = (v)$/
CONFIG_NAME	../common/db_appinit.c	/^#define	CONFIG_NAME	"\/DB_CONFIG"$/
CONFLICTS	../include/lock.h	/^#define CONFLICTS(T, HELD, WANTED) \\$/
C_DELETED	../include/btree.h	/^#define	C_DELETED	0x0001		\/* Record was deleted. /
DATA_INIT_CNT	../common/db_appinit.c	/^#define	DATA_INIT_CNT	20			\/* Start with 20 data /
DBBGET_USAGE	../test/utils.c	/^#define DBBGET_USAGE "dbN get txn key data flags [/
DBCBGET_USAGE	../test/utils.c	/^#define DBCBGET_USAGE "cursorN get key data flags /
DBCCLOSE_USAGE	../test/utils.c	/^#define DBCCLOSE_USAGE "dbN.cursorM close"$/
DBCDEL_USAGE	../test/utils.c	/^#define DBCDEL_USAGE "cursorN del flags"$/
DBCGETBIN_USAGE	../test/utils.c	/^#define DBCGETBIN_USAGE "cursorN getbin file key f/
DBCGET_USAGE	../test/utils.c	/^#define DBCGET_USAGE "cursorN get key flags [beg l/
DBCLOSE_USAGE	../test/utils.c	/^#define DBCLOSE_USAGE "dbN close"$/
DBCPUT_USAGE	../test/utils.c	/^#define DBCPUT_USAGE "cursorN put key data flags"$/
DBCURSOR_USAGE	../test/utils.c	/^#define DBCURSOR_USAGE "dbN.cursorM ?arg arg ...?"/
DBCURS_USAGE	../test/utils.c	/^#define DBCURS_USAGE "dbN cursor txn [flags]"$/
DBC_CONTINUE	../include/db.h	/^#define	DBC_CONTINUE	0x001		\/* Continue dup searc/
DBC_KEYSET	../include/db.h	/^#define	DBC_KEYSET	0x002		\/* Continue dup search:/
DBC_RECOVER	../include/db.h	/^#define	DBC_RECOVER	0x004		\/* In recovery (do not/
DBC_RMW	../include/db.h	/^#define	DBC_RMW		0x008		\/* Acquire write flag in /
DBC_WRITER	../include/db.h	/^#define	DBC_WRITER	0x010		\/* Cursor immediately w/
DBDEL_USAGE	../test/utils.c	/^#define DBDEL_USAGE "dbN del txn key flags"$/
DBENV_USAGE	../test/utils.c	/^#define DBENV_USAGE "dbenv "$/
DBFD_USAGE	../test/utils.c	/^#define DBFD_USAGE "dbN fd"$/
DBGETBIN_USAGE	../test/utils.c	/^#define DBGETBIN_USAGE "dbN getbin path txn key fl/
DBGET_USAGE	../test/utils.c	/^#define DBGET_USAGE "dbN get txn key flags [beg le/
DBINFO_FCHK	../db/db.c	/^#define	DBINFO_FCHK(dbp, fn, meta_flags, m_name, d/
DBLOCKER_USAGE	../test/utils.c	/^#define	DBLOCKER_USAGE "dbN locker"$/
DBMDEL_USAGE	../test/tcl_dbm.c	/^#define DBMDEL_USAGE "delete key"$/
DBMFETCH_USAGE	../test/tcl_dbm.c	/^#define DBMFETCH_USAGE "fetch key"$/
DBMFIRST_USAGE	../test/tcl_dbm.c	/^#define DBMFIRST_USAGE "firstkey"$/
DBMINIT_USAGE	../test/tcl_dbm.c	/^#define DBMINIT_USAGE "dbminit file"$/
DBMNEXT_USAGE	../test/tcl_dbm.c	/^#define DBMNEXT_USAGE "nextkey key"$/
DBMSTORE_USAGE	../test/tcl_dbm.c	/^#define DBMSTORE_USAGE "store key data"$/
DBM_INSERT	../include/db.h	/^#define	DBM_INSERT	0		\/* Flags to dbm_store(). */
DBM_REPLACE	../include/db.h	/^#define	DBM_REPLACE	1$/
DBM_SUFFIX	../include/db.h	/^#define	DBM_SUFFIX	".db"$/
DBOPEN_USAGE	../test/utils.c	/^#define DBOPEN_USAGE "dbopen file flags mode type /
DBPPUT_USAGE	../test/utils.c	/^#define DBPPUT_USAGE "dbN put txn key data flags d/
DBPUTBIN_USAGE	../test/utils.c	/^#define DBPUTBIN_USAGE "dbN put txn key data flags/
DBPUT_USAGE	../test/utils.c	/^#define DBPUT_USAGE "dbN put txn key data flags"$/
DBSYNC_USAGE	../test/utils.c	/^#define DBSYNC_USAGE "dbN sync flags"$/
DBWIDGET_USAGE	../test/utils.c	/^#define DBWIDGET_USAGE "dbN option ?arg arg ...?"$/
DB_ADDSTR	../common/db_appinit.c	/^#define	DB_ADDSTR(str) {						\\$/
DB_ADD_BIG	../include/db_am.h	/^#define	DB_ADD_BIG	0x30$/
DB_ADD_DUP	../include/db_am.h	/^#define	DB_ADD_DUP	0x10$/
DB_ADD_PAGE	../include/db_am.h	/^#define	DB_ADD_PAGE	0x70$/
DB_AFTER	../include/db.h	/^#define	DB_AFTER	 1		\/* c_put() *\/$/
DB_AM_CDB	../include/db.h	/^#define	DB_AM_CDB	0x000001	\/* Concurrent Access M/
DB_AM_DUP	../include/db.h	/^#define	DB_AM_DUP	0x000002	\/* DB_DUP (internal). /
DB_AM_INMEM	../include/db.h	/^#define	DB_AM_INMEM	0x000004	\/* In-memory; no syn/
DB_AM_LOCKING	../include/db.h	/^#define	DB_AM_LOCKING	0x000008	\/* Perform locking/
DB_AM_LOGGING	../include/db.h	/^#define	DB_AM_LOGGING	0x000010	\/* Perform logging/
DB_AM_MLOCAL	../include/db.h	/^#define	DB_AM_MLOCAL	0x000020	\/* Database memory /
DB_AM_PGDEF	../include/db.h	/^#define	DB_AM_PGDEF	0x000040	\/* Page size was def/
DB_AM_RDONLY	../include/db.h	/^#define	DB_AM_RDONLY	0x000080	\/* Database is read/
DB_AM_SWAP	../include/db.h	/^#define	DB_AM_SWAP	0x000100	\/* Pages need to be b/
DB_AM_THREAD	../include/db.h	/^#define	DB_AM_THREAD	0x000200	\/* DB is multi-thre/
DB_APPEND	../include/db.h	/^#define	DB_APPEND	 2		\/* put() *\/$/
DB_ARCH_ABS	../include/db.h	/^#define	DB_ARCH_ABS		0x001	\/* Absolute pathnames./
DB_ARCH_DATA	../include/db.h	/^#define	DB_ARCH_DATA		0x002	\/* Data files. *\/$/
DB_ARCH_LOG	../include/db.h	/^#define	DB_ARCH_LOG		0x004	\/* Log files. *\/$/
DB_BEFORE	../include/db.h	/^#define	DB_BEFORE	 3		\/* c_put() *\/$/
DB_BTREEMAGIC	../include/db.h	/^#define	DB_BTREEMAGIC	0x053162$/
DB_BTREEOLDVER	../include/db.h	/^#define	DB_BTREEOLDVER	6		\/* Oldest btree version/
DB_BTREEVERSION	../include/db.h	/^#define	DB_BTREEVERSION	6		\/* Current btree versi/
DB_BT_RECNUM	../include/db.h	/^#define	DB_BT_RECNUM	0x000400	\/* DB_RECNUM (inter/
DB_CACHESIZE_DEF	../include/mp.h	/^#define	DB_CACHESIZE_DEF	(256 * 1024)$/
DB_CACHESIZE_MIN	../include/mp.h	/^#define	DB_CACHESIZE_MIN	( 20 * 1024)$/
DB_CALLBACK	../include/db_int.h	/^#define	DB_CALLBACK	\/* Nothing. *\/$/
DB_CHECKPOINT	../include/db.h	/^#define	DB_CHECKPOINT	 4		\/* log_put(), log_get()/
DB_CREATE	../include/db.h	/^#define	DB_CREATE	      0x000001	\/* O_CREAT: crea/
DB_CURLSN	../include/db.h	/^#define	DB_CURLSN	 5		\/* log_put() *\/$/
DB_CURRENT	../include/db.h	/^#define	DB_CURRENT	 6		\/* c_get(), c_put(), log_g/
DB_DBM_ERROR	../include/db.h	/^#define	DB_DBM_ERROR	0x000800	\/* Error in DBM\/ND/
DB_DBM_HSEARCH	../include/db.h	/^#define	DB_DBM_HSEARCH	0		\/* No historic interfac/
DB_DBT_INTERNAL	../include/db.h	/^#define	DB_DBT_INTERNAL	0x01		\/* Ignore user's ma/
DB_DBT_MALLOC	../include/db.h	/^#define	DB_DBT_MALLOC	0x02		\/* Return in allocate/
DB_DBT_PARTIAL	../include/db.h	/^#define	DB_DBT_PARTIAL	0x04		\/* Partial put\/get./
DB_DBT_USERMEM	../include/db.h	/^#define	DB_DBT_USERMEM	0x08		\/* Return in user's /
DB_DEFAULT	../include/db_int.h	/^#define	DB_DEFAULT	0x000000	\/* No flag was specif/
DB_DEFAULT_LOCK_FILE	../include/lock.h	/^#define DB_DEFAULT_LOCK_FILE	"__db_lock.share"$/
DB_DEFAULT_LOG_FILE	../include/log.h	/^#define DB_DEFAULT_LOG_FILE	"__db_log.share"$/
DB_DEFAULT_MPOOL_FILE	../include/mp.h	/^#define	DB_DEFAULT_MPOOL_FILE	"__db_mpool.share"$/
DB_DEF_IOSIZE	../include/db_int.h	/^#define	DB_DEF_IOSIZE	(8 * 1024)$/
DB_DELETED	../include/db.h	/^#define	DB_DELETED		( -9)	\/* Recovery file marked/
DB_DELIMITER	../include/db.h	/^#define	DB_DELIMITER		0x0001	\/* Recno: re_delim s/
DB_DUP	../include/db.h	/^#define	DB_DUP			0x0002	\/* Btree, Hash: duplicate/
DB_DUPSORT	../include/db.h	/^#define	DB_DUPSORT		0x0004	\/* Btree, Hash: duplic/
DB_ENV_APPINIT	../include/db.h	/^#define	DB_ENV_APPINIT		0x01	\/* Paths initialized/
DB_ENV_CDB	../include/db.h	/^#define	DB_ENV_CDB		0x02	\/* Concurrent DB product/
DB_ENV_FLAGS	../test/dbtest.h	/^#define	DB_ENV_FLAGS \\$/
DB_ENV_STANDALONE	../include/db.h	/^#define	DB_ENV_STANDALONE	0x04	\/* Test: freestand/
DB_ENV_THREAD	../include/db.h	/^#define	DB_ENV_THREAD		0x08	\/* DB_ENV is multi-th/
DB_EXCL	../include/db.h	/^#define	DB_EXCL		      0x002000	\/* O_EXCL: exclus/
DB_FILE_ID_LEN	../include/db.h	/^#define	DB_FILE_ID_LEN		20	\/* DB file ID length. /
DB_FIRST	../include/db.h	/^#define	DB_FIRST	 7		\/* c_get(), log_get() *\/$/
DB_FIXEDLEN	../include/db.h	/^#define	DB_FIXEDLEN		0x0008	\/* Recno: fixed-lengt/
DB_FLUSH	../include/db.h	/^#define	DB_FLUSH	 8		\/* log_put() *\/$/
DB_FTYPE_BTREE	../include/db_int.h	/^#define	DB_FTYPE_BTREE		-1	\/* Btree. *\/$/
DB_FTYPE_HASH	../include/db_int.h	/^#define	DB_FTYPE_HASH		-2	\/* Hash. *\/$/
DB_FUNC_CLOSE	../include/db.h	/^#define	DB_FUNC_CLOSE	 1		\/* POSIX 1003.1 close. /
DB_FUNC_DIRFREE	../include/db.h	/^#define	DB_FUNC_DIRFREE	 2		\/* DB: free directory/
DB_FUNC_DIRLIST	../include/db.h	/^#define	DB_FUNC_DIRLIST	 3		\/* DB: create directo/
DB_FUNC_EXISTS	../include/db.h	/^#define	DB_FUNC_EXISTS	 4		\/* DB: return if file /
DB_FUNC_FREE	../include/db.h	/^#define	DB_FUNC_FREE	 5		\/* ANSI C free. *\/$/
DB_FUNC_FSYNC	../include/db.h	/^#define	DB_FUNC_FSYNC	 6		\/* POSIX 1003.1 fsync. /
DB_FUNC_IOINFO	../include/db.h	/^#define	DB_FUNC_IOINFO	 7		\/* DB: return file I\//
DB_FUNC_MALLOC	../include/db.h	/^#define	DB_FUNC_MALLOC	 8		\/* ANSI C malloc. *\/$/
DB_FUNC_MAP	../include/db.h	/^#define	DB_FUNC_MAP	 9		\/* DB: map file into shar/
DB_FUNC_OPEN	../include/db.h	/^#define	DB_FUNC_OPEN	10		\/* POSIX 1003.1 open. */
DB_FUNC_READ	../include/db.h	/^#define	DB_FUNC_READ	11		\/* POSIX 1003.1 read. */
DB_FUNC_REALLOC	../include/db.h	/^#define	DB_FUNC_REALLOC	12		\/* ANSI C realloc. */
DB_FUNC_RUNLINK	../include/db.h	/^#define	DB_FUNC_RUNLINK	13		\/* DB: remove a share/
DB_FUNC_SEEK	../include/db.h	/^#define	DB_FUNC_SEEK	14		\/* POSIX 1003.1 lseek. */
DB_FUNC_SLEEP	../include/db.h	/^#define	DB_FUNC_SLEEP	15		\/* DB: sleep secs\/usec/
DB_FUNC_UNLINK	../include/db.h	/^#define	DB_FUNC_UNLINK	16		\/* POSIX 1003.1 unlink/
DB_FUNC_UNMAP	../include/db.h	/^#define	DB_FUNC_UNMAP	17		\/* DB: unmap shared mem/
DB_FUNC_WRITE	../include/db.h	/^#define	DB_FUNC_WRITE	18		\/* POSIX 1003.1 write. /
DB_FUNC_YIELD	../include/db.h	/^#define	DB_FUNC_YIELD	19		\/* DB: yield thread to /
DB_GET_BOTH	../include/db.h	/^#define	DB_GET_BOTH	 9		\/* get(), c_get() *\/$/
DB_GET_RECNO	../include/db.h	/^#define	DB_GET_RECNO	10		\/* c_get() *\/$/
DB_GLOBAL	../include/db_int.h	/^#define	DB_GLOBAL(v)	__db_global_values.v$/
DB_GROW_SIZE	../include/log.h	/^#define	DB_GROW_SIZE	64$/
DB_HASHMAGIC	../include/db.h	/^#define	DB_HASHMAGIC	0x061561$/
DB_HASHOLDVER	../include/db.h	/^#define	DB_HASHOLDVER	4		\/* Oldest hash version s/
DB_HASHVERSION	../include/db.h	/^#define	DB_HASHVERSION	5		\/* Current hash version/
DB_HASH_DUP	../include/db_page.h	/^#define	DB_HASH_DUP	0x01$/
DB_INCOMPLETE	../include/db.h	/^#define	DB_INCOMPLETE		( -1)	\/* Sync didn't finis/
DB_INFO_FLAGS	../db/db.c	/^#define	DB_INFO_FLAGS \\$/
DB_INIT_CDB	../include/db.h	/^#define	DB_INIT_CDB	      0x000008	\/* Concurrent /
DB_INIT_LOCK	../include/db.h	/^#define	DB_INIT_LOCK	      0x000010	\/* Initialize/
DB_INIT_LOG	../include/db.h	/^#define	DB_INIT_LOG	      0x000020	\/* Initialize /
DB_INIT_MPOOL	../include/db.h	/^#define	DB_INIT_MPOOL	      0x000040	\/* Initializ/
DB_INIT_TXN	../include/db.h	/^#define	DB_INIT_TXN	      0x000080	\/* Initialize /
DB_IO_READ	../include/os.h	/^#define	DB_IO_READ	1$/
DB_IO_WRITE	../include/os.h	/^#define	DB_IO_WRITE	2$/
DB_ISBIG	../include/db_am.h	/^#define DB_ISBIG	0x01$/
DB_JOIN_ITEM	../include/db.h	/^#define	DB_JOIN_ITEM	11		\/* c_get(); do not do pr/
DB_JOIN_USAGE	../test/utils.c	/^#define DB_JOIN_USAGE "dbN join {DBC ... DBC} flag/
DB_KEYEMPTY	../include/db.h	/^#define	DB_KEYEMPTY		( -2)	\/* The key\/data pair /
DB_KEYEXIST	../include/db.h	/^#define	DB_KEYEXIST		( -3)	\/* The key\/data pair /
DB_KEYFIRST	../include/db.h	/^#define	DB_KEYFIRST	12		\/* c_put() *\/$/
DB_KEYLAST	../include/db.h	/^#define	DB_KEYLAST	13		\/* c_put() *\/$/
DB_LAST	../include/db.h	/^#define	DB_LAST		14		\/* c_get(), log_get() *\/$/
DB_LINE	../include/db_int.h	/^#define	DB_LINE "=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=/
DB_LOCKMAGIC	../include/db.h	/^#define	DB_LOCKMAGIC	0x090193$/
DB_LOCKVERSION	../include/db.h	/^#define	DB_LOCKVERSION	1$/
DB_LOCK_CONFLICT	../include/db.h	/^#define	DB_LOCK_CONFLICT	0x01	\/* Run on any confl/
DB_LOCK_DEADLOCK	../include/db.h	/^#define	DB_LOCK_DEADLOCK	( -4)	\/* Locker killed t/
DB_LOCK_DEFAULT	../include/db.h	/^#define	DB_LOCK_DEFAULT		1	\/* Default policy. *\//
DB_LOCK_DEFAULT_N	../include/lock.h	/^#define DB_LOCK_DEFAULT_N	5000	\/* Default # of lo/
DB_LOCK_LOCKER	../include/lock.h	/^#define	DB_LOCK_LOCKER		2$/
DB_LOCK_MAXID	../include/lock.h	/^#define DB_LOCK_MAXID		0x7fffffff$/
DB_LOCK_NORUN	../include/db.h	/^#define	DB_LOCK_NORUN		0$/
DB_LOCK_NOTGRANTED	../include/db.h	/^#define	DB_LOCK_NOTGRANTED	( -5)	\/* Lock unavaila/
DB_LOCK_NOTHELD	../include/db.h	/^#define	DB_LOCK_NOTHELD		( -6)	\/* Lock not held b/
DB_LOCK_NOWAIT	../include/db.h	/^#define	DB_LOCK_NOWAIT		0x01	\/* Don't wait on una/
DB_LOCK_OBJTYPE	../include/lock.h	/^#define	DB_LOCK_OBJTYPE		1$/
DB_LOCK_OLDEST	../include/db.h	/^#define	DB_LOCK_OLDEST		2	\/* Abort oldest transac/
DB_LOCK_RANDOM	../include/db.h	/^#define	DB_LOCK_RANDOM		3	\/* Abort random transac/
DB_LOCK_RIW_N	../include/db.h	/^#define	DB_LOCK_RIW_N	6$/
DB_LOCK_RW_N	../include/db.h	/^#define	DB_LOCK_RW_N	3$/
DB_LOCK_UPGRADE	../include/db.h	/^#define	DB_LOCK_UPGRADE		0x02	\/* Upgrade an exist/
DB_LOCK_YOUNGEST	../include/db.h	/^#define	DB_LOCK_YOUNGEST	4	\/* Abort youngest tran/
DB_LOGGING	../include/db_int.h	/^#define	DB_LOGGING(dbc)							\\$/
DB_LOGMAGIC	../include/db.h	/^#define	DB_LOGMAGIC	0x040988$/
DB_LOGOLDVER	../include/db.h	/^#define	DB_LOGOLDVER	2		\/* Oldest log version sup/
DB_LOGVERSION	../include/db.h	/^#define	DB_LOGVERSION	2		\/* Current log version. /
DB_MAXMMAPSIZE	../mp/mp_fopen.c	/^#define	DB_MAXMMAPSIZE	(10 * 1024 * 1024)	\/* 10 M/
DB_MAX_PAGES	../include/db.h	/^#define	DB_MAX_PAGES	0xffffffff	\/* >= # of pages /
DB_MAX_PGSIZE	../include/db_int.h	/^#define	DB_MAX_PGSIZE	0x010000	\/* Maximum page si/
DB_MAX_RECORDS	../include/db.h	/^#define	DB_MAX_RECORDS	0xffffffff	\/* >= # of reco/
DB_MINCACHE	../include/db_int.h	/^#define	DB_MINCACHE	10		\/* Minimum cached pages */
DB_MIN_PGSIZE	../include/db_int.h	/^#define	DB_MIN_PGSIZE	0x000200	\/* Minimum page si/
DB_MPOOL_CLEAN	../include/db.h	/^#define	DB_MPOOL_CLEAN		0x001	\/* Clear modified b/
DB_MPOOL_CREATE	../include/db.h	/^#define	DB_MPOOL_CREATE		0x001	\/* Create a page. /
DB_MPOOL_DIRTY	../include/db.h	/^#define	DB_MPOOL_DIRTY		0x002	\/* Page is modified/
DB_MPOOL_DISCARD	../include/db.h	/^#define	DB_MPOOL_DISCARD	0x004	\/* Don't cache the/
DB_MPOOL_LAST	../include/db.h	/^#define	DB_MPOOL_LAST		0x002	\/* Return the last p/
DB_MPOOL_NEW	../include/db.h	/^#define	DB_MPOOL_NEW		0x004	\/* Create a new page./
DB_MPOOL_PRIVATE	../include/db.h	/^#define	DB_MPOOL_PRIVATE      0x000100	\/* Mpool: /
DB_MUTEXLOCKS	../include/db.h	/^#define	DB_MUTEXLOCKS	20		\/* DB: turn off all mut/
DB_NEEDSPLIT	../include/db.h	/^#define	DB_NEEDSPLIT		(-10)	\/* Page needs to be s/
DB_NEXT	../include/db.h	/^#define	DB_NEXT		15		\/* c_get(), log_get() *\/$/
DB_NEXT_DUP	../include/db.h	/^#define	DB_NEXT_DUP	16		\/* c_get() *\/$/
DB_NOMMAP	../include/db.h	/^#define	DB_NOMMAP	      0x000002	\/* Don't mmap un/
DB_NOOVERWRITE	../include/db.h	/^#define	DB_NOOVERWRITE	17		\/* put() *\/$/
DB_NOSYNC	../include/db.h	/^#define	DB_NOSYNC	18		\/* close() *\/$/
DB_NOTFOUND	../include/db.h	/^#define	DB_NOTFOUND		( -7)	\/* Key\/data pair not /
DB_OPFLAGS_MASK	../include/db.h	/^#define	DB_OPFLAGS_MASK	0x1f		\/* Mask for operati/
DB_PAD	../include/db.h	/^#define	DB_PAD			0x0010	\/* Recno: re_pad set. *\//
DB_PAGEYIELD	../include/db.h	/^#define	DB_PAGEYIELD	21		\/* DB: yield the CPU on /
DB_PAGE_CLEAR_LEN	../include/db_page.h	/^#define	DB_PAGE_CLEAR_LEN	32$/
DB_PANIC_CHECK	../include/db_int.h	/^#define	DB_PANIC_CHECK(dbp) {						\\$/
DB_PREV	../include/db.h	/^#define	DB_PREV		19		\/* c_get(), log_get() *\/$/
DB_RDONLY	../include/db.h	/^#define	DB_RDONLY	      0x004000	\/* O_RDONLY: rea/
DB_RECNUM	../include/db.h	/^#define	DB_RECNUM		0x0020	\/* Btree: record number/
DB_RECORDCOUNT	../include/db.h	/^#define	DB_RECORDCOUNT	20		\/* stat() *\/$/
DB_RECOVER	../include/db.h	/^#define	DB_RECOVER	      0x000200	\/* Run normal r/
DB_RECOVER_FATAL	../include/db.h	/^#define	DB_RECOVER_FATAL      0x000400	\/* Run cat/
DB_REGIONMAGIC	../include/db_int.h	/^#define	DB_REGIONMAGIC	0x120897$/
DB_REGION_ANON	../include/db.h	/^#define	DB_REGION_ANON	22		\/* DB: anonymous, unna/
DB_REGION_INIT	../include/db.h	/^#define	DB_REGION_INIT	23		\/* DB: page-fault regi/
DB_REGION_NAME	../include/db.h	/^#define	DB_REGION_NAME	24		\/* DB: anonymous, name/
DB_REM_BIG	../include/db_am.h	/^#define	DB_REM_BIG	0x40$/
DB_REM_DUP	../include/db_am.h	/^#define	DB_REM_DUP	0x20$/
DB_REM_PAGE	../include/db_am.h	/^#define	DB_REM_PAGE	0x80$/
DB_RENUMBER	../include/db.h	/^#define	DB_RENUMBER		0x0040	\/* Recno: renumber on/
DB_RE_DELIMITER	../include/db.h	/^#define	DB_RE_DELIMITER	0x001000	\/* DB_DELIMITER /
DB_RE_FIXEDLEN	../include/db.h	/^#define	DB_RE_FIXEDLEN	0x002000	\/* DB_FIXEDLEN (i/
DB_RE_PAD	../include/db.h	/^#define	DB_RE_PAD	0x004000	\/* DB_PAD (internal). /
DB_RE_RENUMBER	../include/db.h	/^#define	DB_RE_RENUMBER	0x008000	\/* DB_RENUMBER (i/
DB_RE_SNAPSHOT	../include/db.h	/^#define	DB_RE_SNAPSHOT	0x010000	\/* DB_SNAPSHOT (i/
DB_RMW	../include/db.h	/^#define	DB_RMW		0x80000000	\/* Acquire write flag /
DB_ROUNDOFF	../include/db_int.h	/^#define	DB_ROUNDOFF(n, round) {						\\$/
DB_RUNRECOVERY	../include/db.h	/^#define	DB_RUNRECOVERY		( -8)	\/* Panic return. */
DB_SEQUENTIAL	../include/db.h	/^#define	DB_SEQUENTIAL	      0x008000	\/* Sequentia/
DB_SET	../include/db.h	/^#define	DB_SET		21		\/* c_get(), log_get() *\/$/
DB_SET_RANGE	../include/db.h	/^#define	DB_SET_RANGE	22		\/* c_get() *\/$/
DB_SET_RECNO	../include/db.h	/^#define	DB_SET_RECNO	23		\/* get(), c_get() *\/$/
DB_SNAPSHOT	../include/db.h	/^#define	DB_SNAPSHOT		0x0080	\/* Recno: snapshot th/
DB_SPLITNEW	../include/db_am.h	/^#define	DB_SPLITNEW	0x60$/
DB_SPLITOLD	../include/db_am.h	/^#define	DB_SPLITOLD	0x50$/
DB_SWAPBYTES	../include/db.h	/^#define	DB_SWAPBYTES		(-11)	\/* Database needs byt/
DB_TEMPORARY	../include/db.h	/^#define	DB_TEMPORARY	      0x010000	\/* Remove on /
DB_THREAD	../include/db.h	/^#define	DB_THREAD	      0x000004	\/* Free-thread D/
DB_THREAD_LOCK	../include/db_int.h	/^#define	DB_THREAD_LOCK(dbp)						\\$/
DB_THREAD_UNLOCK	../include/db_int.h	/^#define	DB_THREAD_UNLOCK(dbp)						\\$/
DB_TRAIL	../common/db_appinit.c	/^#define	DB_TRAIL	"XXXXXX"$/
DB_TRUNCATE	../include/db.h	/^#define	DB_TRUNCATE	      0x020000	\/* O_TRUNCATE:/
DB_TSL_SPINS	../include/db.h	/^#define	DB_TSL_SPINS	25		\/* DB: initialize spin c/
DB_TXNMAGIC	../include/db.h	/^#define	DB_TXNMAGIC	0x041593$/
DB_TXNVERSION	../include/db.h	/^#define	DB_TXNVERSION	1$/
DB_TXN_BACKWARD_ROLL	../include/db.h	/^#define	DB_TXN_BACKWARD_ROLL	1	\/* Read the log ba/
DB_TXN_CKP	../include/db.h	/^#define	DB_TXN_CKP		(-12)	\/* Encountered ckp reco/
DB_TXN_FORWARD_ROLL	../include/db.h	/^#define	DB_TXN_FORWARD_ROLL	2	\/* Read the log for/
DB_TXN_NOSYNC	../include/db.h	/^#define	DB_TXN_NOSYNC	      0x000800	\/* Do not sy/
DB_TXN_OPENFILES	../include/db.h	/^#define	DB_TXN_OPENFILES	3	\/* Read for open files/
DB_TXN_REDO	../include/db.h	/^#define	DB_TXN_REDO		4	\/* Redo the operation. *\//
DB_TXN_UNDO	../include/db.h	/^#define	DB_TXN_UNDO		5	\/* Undo the operation. *\//
DB_USE_ENVIRON	../include/db.h	/^#define	DB_USE_ENVIRON	      0x001000	\/* Use the /
DB_USE_ENVIRON_ROOT	../include/db.h	/^#define	DB_USE_ENVIRON_ROOT   0x002000	\/* Use the/
DB_VERSION_MAJOR	../include/db.h	/^#define	DB_VERSION_MAJOR	2$/
DB_VERSION_MINOR	../include/db.h	/^#define	DB_VERSION_MINOR	7$/
DB_VERSION_PATCH	../include/db.h	/^#define	DB_VERSION_PATCH	5$/
DB_VERSION_STRING	../include/db.h	/^#define	DB_VERSION_STRING	"Sleepycat Software: Ber/
DB_VMPAGESIZE	../include/db_int.h	/^#define	DB_VMPAGESIZE	(4 * 1024)$/
DB_WRITELOCK	../include/db.h	/^#define	DB_WRITELOCK	24		\/* cursor() (internal) */
DB_bam_BEGIN	../include/db_dispatch.h	/^#define	DB_bam_BEGIN		 50$/
DB_bam_adj	../include/btree_auto.h	/^#define	DB_bam_adj	(DB_bam_BEGIN + 5)$/
DB_bam_cadjust	../include/btree_auto.h	/^#define	DB_bam_cadjust	(DB_bam_BEGIN + 6)$/
DB_bam_cdel	../include/btree_auto.h	/^#define	DB_bam_cdel	(DB_bam_BEGIN + 7)$/
DB_bam_pg_alloc	../include/btree_auto.h	/^#define	DB_bam_pg_alloc	(DB_bam_BEGIN + 1)$/
DB_bam_pg_free	../include/btree_auto.h	/^#define	DB_bam_pg_free	(DB_bam_BEGIN + 2)$/
DB_bam_repl	../include/btree_auto.h	/^#define	DB_bam_repl	(DB_bam_BEGIN + 8)$/
DB_bam_rsplit	../include/btree_auto.h	/^#define	DB_bam_rsplit	(DB_bam_BEGIN + 4)$/
DB_bam_split	../include/btree_auto.h	/^#define	DB_bam_split	(DB_bam_BEGIN + 3)$/
DB_db_BEGIN	../include/db_dispatch.h	/^#define	DB_db_BEGIN		 40$/
DB_db_addpage	../include/db_auto.h	/^#define	DB_db_addpage	(DB_db_BEGIN + 6)$/
DB_db_addrem	../include/db_auto.h	/^#define	DB_db_addrem	(DB_db_BEGIN + 1)$/
DB_db_big	../include/db_auto.h	/^#define	DB_db_big	(DB_db_BEGIN + 3)$/
DB_db_debug	../include/db_auto.h	/^#define	DB_db_debug	(DB_db_BEGIN + 7)$/
DB_db_ovref	../include/db_auto.h	/^#define	DB_db_ovref	(DB_db_BEGIN + 4)$/
DB_db_relink	../include/db_auto.h	/^#define	DB_db_relink	(DB_db_BEGIN + 5)$/
DB_db_split	../include/db_auto.h	/^#define	DB_db_split	(DB_db_BEGIN + 2)$/
DB_ham_BEGIN	../include/db_dispatch.h	/^#define	DB_ham_BEGIN		 20$/
DB_ham_copypage	../include/hash_auto.h	/^#define	DB_ham_copypage	(DB_ham_BEGIN + 8)$/
DB_ham_insdel	../include/hash_auto.h	/^#define	DB_ham_insdel	(DB_ham_BEGIN + 1)$/
DB_ham_newpage	../include/hash_auto.h	/^#define	DB_ham_newpage	(DB_ham_BEGIN + 2)$/
DB_ham_newpgno	../include/hash_auto.h	/^#define	DB_ham_newpgno	(DB_ham_BEGIN + 6)$/
DB_ham_ovfl	../include/hash_auto.h	/^#define	DB_ham_ovfl	(DB_ham_BEGIN + 7)$/
DB_ham_replace	../include/hash_auto.h	/^#define	DB_ham_replace	(DB_ham_BEGIN + 5)$/
DB_ham_splitdata	../include/hash_auto.h	/^#define	DB_ham_splitdata	(DB_ham_BEGIN + 4)$/
DB_ham_splitmeta	../include/hash_auto.h	/^#define	DB_ham_splitmeta	(DB_ham_BEGIN + 3)$/
DB_log_BEGIN	../include/db_dispatch.h	/^#define	DB_log_BEGIN		  0$/
DB_log_register	../include/log_auto.h	/^#define	DB_log_register	(DB_log_BEGIN + 1)$/
DB_ram_BEGIN	../include/db_dispatch.h	/^#define	DB_ram_BEGIN		100$/
DB_txn_BEGIN	../include/db_dispatch.h	/^#define	DB_txn_BEGIN		  5$/
DB_txn_child	../include/txn_auto.h	/^#define	DB_txn_child	(DB_txn_BEGIN + 4)$/
DB_txn_ckp	../include/txn_auto.h	/^#define	DB_txn_ckp	(DB_txn_BEGIN + 2)$/
DB_txn_regop	../include/txn_auto.h	/^#define	DB_txn_regop	(DB_txn_BEGIN + 1)$/
DB_txn_xa_regop	../include/txn_auto.h	/^#define	DB_txn_xa_regop	(DB_txn_BEGIN + 3)$/
DB_user_BEGIN	../include/db_dispatch.h	/^#define	DB_user_BEGIN		150$/
DCHARHASH	../hash/hash_func.c	/^#define	DCHARHASH(h, c)	((h) = 0x63c63cd9*(h) + 0x/
DEBUG_CHECK_USAGE	../test/utils.c	/^#define DEBUG_CHECK_USAGE "debug_check"$/
DEBUG_LREAD	../include/db_int.h	/^#define	DEBUG_LREAD(C, T, O, K, A, F)	LOG_OP(C, T,/
DEBUG_LWRITE	../include/db_int.h	/^#define	DEBUG_LWRITE(C, T, O, K, A, F)	LOG_OP(C, T/
DEFAULT_MAX	../include/log.h	/^#define	DEFAULT_MAX	(10 * MEGABYTE)	\/* 10 Mb. *\//
DEFAULT_TXN_FILE	../include/txn.h	/^#define	DEFAULT_TXN_FILE	"__db_txn.share"$/
DEFMINKEYPAGE	../include/btree.h	/^#define	DEFMINKEYPAGE	 (2)$/
DEF_LOG_SIZE	../log/log.c	/^#define	DEF_LOG_SIZE	(30 * 1024)$/
DELOVFL	../include/hash.h	/^#define	DELOVFL		0x50$/
DELPAIR	../include/hash.h	/^#define	DELPAIR		0x30$/
DELPGNO	../include/hash.h	/^#define	DELPGNO		0x70$/
DIRTY_META	../include/hash.h	/^#define	DIRTY_META(D, I, R) {						\\$/
DISCARD	../btree/bt_cursor.c	/^#define	DISCARD(dbc, cp) {						\\$/
DO_ENV	../test/test_ext.h	/^#define	DO_ENV	0x1$/
DO_INFO	../test/test_ext.h	/^#define	DO_INFO	0x2$/
DUP_SIZE	../include/hash.h	/^#define	DUP_SIZE(len)	((len) + 2 * sizeof(db_indx_/
EMSG	../clib/getopt.c	/^#define	EMSG	""$/
ENVWIDGET_SIMPLEDUP	../test/utils.c	/^#define	ENVWIDGET_SIMPLEDUP "envN simpledup"$/
ENVWIDGET_USAGE	../test/utils.c	/^#define	ENVWIDGET_USAGE "envN"$/
E_ERROR	../test/test_ext.h	/^#define E_ERROR(S)                                /
FAST_HASH	../lock/lock_util.c	/^#define FAST_HASH(P) {			\\$/
FMAP_ENTRIES	../mp/mp_pr.c	/^#define	FMAP_ENTRIES	200			\/* Files we map. *\/$/
FREE_TCL	../test/test_ext.h	/^#define	FREE_TCL(x)$/
F_CLR	../include/db_int.h	/^#define	F_CLR(p, f)	(p)->flags &= ~(f)$/
F_ISSET	../include/db_int.h	/^#define	F_ISSET(p, f)	((p)->flags & (f))$/
F_SET	../include/db_int.h	/^#define	F_SET(p, f)	(p)->flags |= (f)$/
GET_BINTERNAL	../include/db_page.h	/^#define	GET_BINTERNAL(pg, indx)						\\$/
GET_BKEYDATA	../include/db_page.h	/^#define	GET_BKEYDATA(pg, indx)						\\$/
GET_BOVERFLOW	../include/db_page.h	/^#define	GET_BOVERFLOW(pg, indx)						\\$/
GET_META	../include/hash.h	/^#define	GET_META(D, I, R) {						\\$/
GET_RINTERNAL	../include/db_page.h	/^#define	GET_RINTERNAL(pg, indx)						\\$/
HASH4	../hash/hash_func.c	/^#define	HASH4	HASH4b$/
HASH4a	../hash/hash_func.c	/^#define	HASH4a	h = (h << 5) - h + *k++;$/
HASH4b	../hash/hash_func.c	/^#define	HASH4b	h = (h << 5) + h + *k++;$/
HASHC	../hash/hash_func.c	/^#define	HASHC	n = *k++ + 65599 * n$/
HASHINSERT	../include/db_shash.h	/^#define	HASHINSERT(begin, type, field, elt, n, has/
HASHMAGIC	../include/db_185.h	/^#define	HASHMAGIC	0x061561$/
HASHREMOVE	../include/db_shash.h	/^#define	HASHREMOVE(begin, type, field, elt, n, has/
HASHREMOVE_EL	../include/db_shash.h	/^#define	HASHREMOVE_EL(begin, type, field, obj, n, /
HASHVERSION	../include/db_185.h	/^#define	HASHVERSION	2$/
HAVE_MMAP_ANONYMOUS	../os/os_map.c	/^#define	HAVE_MMAP_ANONYMOUS	1$/
HCREATE_USAGE	../test/tcl_hsearch.c	/^#define HCREATE_USAGE "hcreate nelem"$/
HDESTROY_USAGE	../test/tcl_hsearch.c	/^#define HDESTROY_USAGE "hdestroy"$/
HKEYDATA_DATA	../include/db_page.h	/^#define	HKEYDATA_DATA(p)	(((u_int8_t *)p) + SSZA(H/
HKEYDATA_PSIZE	../include/db_page.h	/^#define	HKEYDATA_PSIZE(len)						\\$/
HKEYDATA_SIZE	../include/db_page.h	/^#define	HKEYDATA_SIZE(len)						\\$/
HOFFDUP_PGNO	../include/db_page.h	/^#define	HOFFDUP_PGNO(p)		(((u_int8_t *)p) + SSZ(HO/
HOFFDUP_PSIZE	../include/db_page.h	/^#define	HOFFDUP_PSIZE		(HOFFDUP_SIZE + sizeof(db_i/
HOFFDUP_SIZE	../include/db_page.h	/^#define	HOFFDUP_SIZE		(sizeof(HOFFDUP))$/
HOFFPAGE_PGNO	../include/db_page.h	/^#define	HOFFPAGE_PGNO(p)	(((u_int8_t *)p) + SSZ(HO/
HOFFPAGE_PSIZE	../include/db_page.h	/^#define	HOFFPAGE_PSIZE		(HOFFPAGE_SIZE + sizeof(db/
HOFFPAGE_SIZE	../include/db_page.h	/^#define	HOFFPAGE_SIZE		(sizeof(HOFFPAGE))$/
HOFFPAGE_TLEN	../include/db_page.h	/^#define	HOFFPAGE_TLEN(p)	(((u_int8_t *)p) + SSZ(HO/
HOFFSET	../include/db_page.h	/^#define	HOFFSET(p)	(((PAGE *)p)->hf_offset)$/
HPAGE_PTYPE	../include/db_page.h	/^#define	HPAGE_PTYPE(p)		(*(u_int8_t *)p)$/
HPAGE_TYPE	../include/db_page.h	/^#define	HPAGE_TYPE(pg, indx)	(*P_ENTRY(pg, indx))$/
HSEARCH_USAGE	../test/tcl_hsearch.c	/^#define HSEARCH_USAGE "hsearch key data find\/ente/
H_DATAINDEX	../include/db_page.h	/^#define	H_DATAINDEX(pindx)		((2 * (pindx)) + 1)$/
H_DELETED	../include/hash.h	/^#define	H_DELETED	0x0001		\/* Cursor item is delet/
H_DIRTY	../include/hash.h	/^#define H_DIRTY		0x0040		\/* Meta-data page needs /
H_DUPLICATE	../include/db_page.h	/^#define	H_DUPLICATE	2	\/* Duplicate key\/data item/
H_DUPONLY	../include/hash.h	/^#define	H_DUPONLY	0x0002		\/* Dups only; do not ch/
H_EXPAND	../include/hash.h	/^#define	H_EXPAND	0x0004		\/* Table expanded. *\/$/
H_ISDUP	../include/hash.h	/^#define	H_ISDUP		0x0008		\/* Cursor is within dupl/
H_KEYDATA	../include/db_page.h	/^#define	H_KEYDATA	1	\/* Key\/data item. *\/$/
H_KEYINDEX	../include/db_page.h	/^#define	H_KEYINDEX(pindx)		(2 * (pindx))$/
H_NOMORE	../include/hash.h	/^#define	H_NOMORE	0x0010		\/* No more entries in bu/
H_NUMPAIRS	../include/db_page.h	/^#define H_NUMPAIRS(pg)			(NUM_ENT(pg) \/ 2)$/
H_OFFDUP	../include/db_page.h	/^#define	H_OFFDUP	4	\/* Overflow page of duplicates/
H_OFFPAGE	../include/db_page.h	/^#define	H_OFFPAGE	3	\/* Overflow key\/data item. */
H_OK	../include/hash.h	/^#define	H_OK		0x0020		\/* Request succeeded. *\/$/
H_ORIGINAL	../include/hash.h	/^#define	H_ORIGINAL	0x0080		\/* Bucket lock existed/
H_PAIRDATA	../include/db_page.h	/^#define	H_PAIRDATA(pg, pindx)		P_ENTRY(pg, H_DATAI/
H_PAIRKEY	../include/db_page.h	/^#define	H_PAIRKEY(pg, pindx)		P_ENTRY(pg, H_KEYIND/
H_PAIRSIZE	../include/db_page.h	/^#define H_PAIRSIZE(pg, psize, pindx)					\\$/
ILLEGAL_SIZE	../common/db_salloc.c	/^#define	ILLEGAL_SIZE	1$/
INVALID	../include/mp.h	/^#define	INVALID		0		\/* Invalid shared memory offs/
INVALID_SEGID	../include/db_int.h	/^#define	INVALID_SEGID	-1$/
ISBIG	../include/hash.h	/^#define	ISBIG(I, N)	(((N) > ((I)->hdr->pagesize \//
ISDOT	../clib/getcwd.c	/^#define	ISDOT(dp) \\$/
ISINTERNAL	../include/btree.h	/^#define	ISINTERNAL(p)	(TYPE(p) == P_IBTREE || TYPE/
ISLEAF	../include/btree.h	/^#define	ISLEAF(p)	(TYPE(p) == P_LBTREE || TYPE(p) /
ISSET_MAP	../lock/lock_deadlock.c	/^#define	ISSET_MAP(M, N)	(M[(N) \/ 32] & (1 << (N) /
ISTEMPORARY	../mp/mp_fopen.c	/^#define	ISTEMPORARY	(path == NULL)$/
IS_CUR_DELETED	../btree/bt_cursor.c	/^#define	IS_CUR_DELETED(cp)						\\$/
IS_DELETED	../btree/bt_cursor.c	/^#define	IS_DELETED(cp, indx)						\\$/
IS_VALID	../include/hash.h	/^#define	IS_VALID(C) ((C)->bucket != BUCKET_INVALID/
IS_XA_TXN	../txn/txn_rec.c	/^#define	IS_XA_TXN(R) (R->xid.size != 0)$/
IS_ZERO_LSN	../include/db_int.h	/^#define	IS_ZERO_LSN(LSN)	((LSN).file == 0)$/
LEAFLEVEL	../include/db_page.h	/^#define	LEAFLEVEL	  1$/
LEN_HDATA	../include/db_page.h	/^#define LEN_HDATA(p, psize, pindx) LEN_HKEYDATA(p,/
LEN_HITEM	../include/db_page.h	/^#define	LEN_HITEM(pg, pgsize, indx)					\\$/
LEN_HKEY	../include/db_page.h	/^#define LEN_HKEY(p, psize, pindx) LEN_HKEYDATA(p, /
LEN_HKEYDATA	../include/db_page.h	/^#define	LEN_HKEYDATA(pg, psize, indx)					\\$/
LEVEL	../include/db_page.h	/^#define	LEVEL(p)	(((PAGE *)p)->level)$/
LFNAME	../include/log.h	/^#define	LFNAME		"log.%010d"	\/* Log file name temp/
LFNAME_V1	../include/log.h	/^#define	LFNAME_V1	"log.%05d"	\/* Log file name tem/
LFPREFIX	../include/log.h	/^#define	LFPREFIX	"log."		\/* Log file name prefix./
LF_CLR	../include/db_int.h	/^#define	LF_CLR(f)	(flags &= ~(f))$/
LF_ISSET	../include/db_int.h	/^#define	LF_ISSET(f)	(flags & (f))$/
LF_SET	../include/db_int.h	/^#define	LF_SET(f)	(flags |= (f))$/
LIST_END	../include/queue.h	/^#define	LIST_END(head)			NULL$/
LIST_ENTRY	../include/queue.h	/^#define LIST_ENTRY(type)						\\$/
LIST_FIRST	../include/queue.h	/^#define	LIST_FIRST(head)		((head)->lh_first)$/
LIST_HEAD	../include/queue.h	/^#define LIST_HEAD(name, type)						\\$/
LIST_INCREMENT	../log/log_archive.c	/^#define	LIST_INCREMENT	64$/
LIST_INIT	../include/queue.h	/^#define	LIST_INIT(head) {						\\$/
LIST_INSERT_AFTER	../include/queue.h	/^#define LIST_INSERT_AFTER(listelm, elm, field) do /
LIST_INSERT_BEFORE	../include/queue.h	/^#define	LIST_INSERT_BEFORE(listelm, elm, field) do/
LIST_INSERT_HEAD	../include/queue.h	/^#define LIST_INSERT_HEAD(head, elm, field) do {			/
LIST_NEXT	../include/queue.h	/^#define	LIST_NEXT(elm, field)		((elm)->field.le_ne/
LIST_REMOVE	../include/queue.h	/^#define LIST_REMOVE(elm, field) do {					\\$/
LOCKBUFFER	../include/mp.h	/^#define	LOCKBUFFER(dbmp, bhp)						\\$/
LOCKCLOSE_USAGE	../test/tcl_lock.c	/^#define LOCKCLOSE_USAGE "lockmgrN close"$/
LOCKDUMP_USAGE	../test/tcl_lock.c	/^#define LOCKDUMP_USAGE "lockmgrN dump flags"$/
LOCKGET_USAGE	../test/tcl_lock.c	/^#define	LOCKGET_USAGE "lockmgrN get locker obj mod/
LOCKHANDLE	../include/mp.h	/^#define	LOCKHANDLE(dbmp, mutexp)					\\$/
LOCKINIT	../include/mp.h	/^#define	LOCKINIT(dbmp, mutexp)						\\$/
LOCKMGR_USAGE	../test/tcl_lock.c	/^#define LOCKMGR_USAGE "lock_open path flags mode [/
LOCKPUT_USAGE	../test/tcl_lock.c	/^#define LOCKPUT_USAGE "lockmgrN.lockM put"$/
LOCKREGION	../include/mp.h	/^#define	LOCKREGION(dbmp)						\\$/
LOCKUNLINK_USAGE	../test/tcl_lock.c	/^#define LOCKUNLINK_USAGE "lock_unlink path force"$/
LOCKVEC_USAGE	../test/tcl_lock.c	/^#define LOCKVEC_USAGE \\$/
LOCKWIDGET_USAGE	../test/tcl_lock.c	/^#define LOCKWIDGET_USAGE "lockmgrN option ?arg arg/
LOCK_DUMP_ALL	../lock/lock_region.c	/^#define	LOCK_DUMP_ALL		0x01f		\/* Display all. *\//
LOCK_DUMP_CONF	../lock/lock_region.c	/^#define	LOCK_DUMP_CONF		0x001		\/* Conflict matrix/
LOCK_DUMP_FREE	../lock/lock_region.c	/^#define	LOCK_DUMP_FREE		0x002		\/* Display lock fr/
LOCK_DUMP_LOCKERS	../lock/lock_region.c	/^#define	LOCK_DUMP_LOCKERS	0x004		\/* Display locke/
LOCK_DUMP_MEM	../lock/lock_region.c	/^#define	LOCK_DUMP_MEM		0x008		\/* Display region m/
LOCK_DUMP_OBJECTS	../lock/lock_region.c	/^#define	LOCK_DUMP_OBJECTS	0x010		\/* Display objec/
LOCK_HASH_ALIGN	../include/lock.h	/^#define LOCK_HASH_ALIGN	8$/
LOCK_HEADER_SIZE	../include/lock.h	/^#define LOCK_HEADER_SIZE(M)	\\$/
LOCK_INVALID	../include/db_int.h	/^#define	LOCK_INVALID	0$/
LOCK_LOCKREGION	../include/lock.h	/^#define	LOCK_LOCKREGION(lt)						\\$/
LOCK_LOGREGION	../include/log.h	/^#define	LOCK_LOGREGION(dblp)						\\$/
LOCK_LOGTHREAD	../include/log.h	/^#define	LOCK_LOGTHREAD(dblp)						\\$/
LOCK_PANIC_CHECK	../include/lock.h	/^#define	LOCK_PANIC_CHECK(lt) {						\\$/
LOCK_REGION_SIZE	../include/lock.h	/^#define LOCK_REGION_SIZE(M, N, H)					\\$/
LOCK_TO_OFFSET	../include/lock.h	/^#define LOCK_TO_OFFSET(lt, lock) \\$/
LOCK_TXNREGION	../include/txn.h	/^#define	LOCK_TXNREGION(tmgrp)						\\$/
LOCK_TXNTHREAD	../include/txn.h	/^#define	LOCK_TXNTHREAD(tmgrp)						\\$/
LOCK_USAGE	../test/tcl_lock.c	/^#define LOCK_USAGE "lockmgrN.lockM cmd ?arg arg ../
LOFFSET	../include/db_page.h	/^#define	LOFFSET(pg)		(P_OVERHEAD + NUM_ENT(pg) * s/
LOGCLOSE_USAGE	../test/tcl_log.c	/^#define LOGCLOSE_USAGE "logN close"$/
LOGCMP_USAGE	../test/tcl_log.c	/^#define LOGCMP_USAGE "logN compare lsn1 lsn2"$/
LOGFILE_USAGE	../test/tcl_log.c	/^#define LOGFILE_USAGE "logN file lsn"$/
LOGFLUSH_USAGE	../test/tcl_log.c	/^#define LOGFLUSH_USAGE "logN flush lsn"$/
LOGGET_USAGE	../test/tcl_log.c	/^#define LOGGET_USAGE "logN get lsn flags"$/
LOGLAST_USAGE	../test/tcl_log.c	/^#define LOGLAST_USAGE "logN last"$/
LOGPUT_USAGE	../test/tcl_log.c	/^#define LOGPUT_USAGE "logN put record flags"$/
LOGREG_USAGE	../test/tcl_log.c	/^#define LOGREG_USAGE "logN register db name type"$/
LOGUNLINK_USAGE	../test/tcl_log.c	/^#define LOGUNLINK_USAGE "log_unlink path force"$/
LOGWIDGET_USAGE	../test/tcl_log.c	/^#define LOGWIDGET_USAGE "logN option ?arg arg ...?/
LOG_CHECKPOINT	../include/log.h	/^#define	LOG_CHECKPOINT	1		\/* Checkpoint: file nam/
LOG_CLOSE	../include/log.h	/^#define	LOG_CLOSE	2		\/* File close. *\/$/
LOG_OP	../include/db_int.h	/^#define	LOG_OP(C, T, O, K, A, F) {					\\$/
LOG_OPEN	../include/log.h	/^#define	LOG_OPEN	3		\/* File open. *\/$/
LOG_PANIC_CHECK	../include/log.h	/^#define	LOG_PANIC_CHECK(dblp) {						\\$/
LOG_UNREG	../test/tcl_log.c	/^#define LOG_UNREG "logN unregister id"$/
LOG_USAGE	../test/tcl_log.c	/^#define LOG_USAGE "log path flags mode [options]\\/
LSN	../include/db_page.h	/^#define	LSN(p)		(((PAGE *)p)->lsn)$/
MAP_FAILED	../os/os_map.c	/^#define	MAP_FAILED	-1$/
MAXBQUALSIZE	../include/xa.h	/^#define	MAXBQUALSIZE	 64		\/* maximum size in byte/
MAXBTREELEVEL	../include/db_page.h	/^#define	MAXBTREELEVEL	255$/
MAXGTRIDSIZE	../include/xa.h	/^#define	MAXGTRIDSIZE	 64		\/* maximum size in byte/
MAXINFOSIZE	../include/xa.h	/^#define	MAXINFOSIZE	256		\/* maximum size in bytes/
MAXLFNAME	../include/log.h	/^#define	MAXLFNAME	2000000000	\/* Maximum log file /
MAXPATHLEN	../include/db_int.h	/^#define	MAXPATHLEN	1024$/
MAX_PAGES	../include/hash.h	/^#define	MAX_PAGES(H)	UINT32_T_MAX$/
MAX_PAGE_NUMBER	../include/db_185.h	/^#define	MAX_PAGE_NUMBER	0xffffffff	\/* >= # of pag/
MAX_PAGE_OFFSET	../include/db_185.h	/^#define	MAX_PAGE_OFFSET	65535		\/* >= # of bytes i/
MAX_REC_NUMBER	../include/db_185.h	/^#define	MAX_REC_NUMBER	0xffffffff	\/* >= # of reco/
MEGABYTE	../include/db_int.h	/^#define	MEGABYTE	1048576$/
MINFILL	../include/hash.h	/^#define	MINFILL		4$/
MPCLOSE_USAGE	../test/tcl_mpool.c	/^#define MPCLOSE_USAGE "mpN close"$/
MPFCLOSE_USAGE	../test/tcl_mpool.c	/^#define MPFCLOSE_USAGE "mpN.mpfM close"$/
MPFGET_USAGE	../test/tcl_mpool.c	/^#define MPFGET_USAGE "mpN.mpfM get pgno flags"$/
MPFOPEN_USAGE	../test/tcl_mpool.c	/^#define MPFOPEN_USAGE "mpN open path pagesize flag/
MPFSYNC_USAGE	../test/tcl_mpool.c	/^#define MPFSYNC_USAGE "mpN.mpfM sync"$/
MPF_USAGE	../test/tcl_mpool.c	/^#define MPF_USAGE "mpN.mpfM cmd ?arg arg ...?"$/
MPOOLUNLINK_USAGE	../test/tcl_mpool.c	/^#define MPOOLUNLINK_USAGE "memp_unlink path force"/
MPOOL_DUMP_ALL	../mp/mp_pr.c	/^#define	MPOOL_DUMP_ALL	0x07			\/* Debug all. *\/$/
MPOOL_DUMP_HASH	../mp/mp_pr.c	/^#define	MPOOL_DUMP_HASH	0x01			\/* Debug hash chai/
MPOOL_DUMP_LRU	../mp/mp_pr.c	/^#define	MPOOL_DUMP_LRU	0x02			\/* Debug LRU chains/
MPOOL_DUMP_MEM	../mp/mp_pr.c	/^#define	MPOOL_DUMP_MEM	0x04			\/* Debug region mem/
MPOOL_USAGE	../test/tcl_mpool.c	/^#define MPOOL_USAGE "memp path mode flags options /
MPSTAT_USAGE	../test/tcl_mpool.c	/^#define MPSTAT_USAGE "mpN stat"$/
MPWIDGET_USAGE	../test/tcl_mpool.c	/^#define MPWIDGET_USAGE "mpN option ?arg arg ...?"$/
MP_CAN_MMAP	../include/mp.h	/^#define	MP_CAN_MMAP	0x01		\/* If the file can be m/
MP_LOCKHANDLE	../include/mp.h	/^#define	MP_LOCKHANDLE	0x01		\/* Threaded, lock han/
MP_LOCKREGION	../include/mp.h	/^#define	MP_LOCKREGION	0x02		\/* Concurrent access,/
MP_LSN_RETRY	../include/mp.h	/^#define	MP_LSN_RETRY	0x01		\/* Retry all BH_WRITE /
MP_PANIC_CHECK	../include/mp.h	/^#define	MP_PANIC_CHECK(dbmp) {						\\$/
MP_READONLY	../include/mp.h	/^#define	MP_READONLY	0x01		\/* File is readonly. */
MP_TEMP	../include/mp.h	/^#define	MP_TEMP		0x02		\/* Backing file is a tempo/
MP_UPGRADE	../include/mp.h	/^#define	MP_UPGRADE	0x02		\/* File descriptor is re/
MP_UPGRADE_FAIL	../include/mp.h	/^#define	MP_UPGRADE_FAIL	0x04		\/* Upgrade wasn't p/
MS	../mutex/mutex.c	/^#define	MS(n)		((n) * 1000)	\/* Milliseconds to mi/
MSGBUF_LEN	../lock/lock_deadlock.c	/^#define	MSGBUF_LEN ((nlockers + 1) * 10 + 64)$/
MUTEXCLOSE_USAGE	../test/tcl_mutex.c	/^#define MUTEXCLOSE_USAGE "mutexN close"$/
MUTEXGR_USAGE	../test/tcl_mutex.c	/^#define MUTEXGR_USAGE "mutexN {get,release} id"$/
MUTEXUNLINK_USAGE	../test/tcl_mutex.c	/^#define MUTEXUNLINK_USAGE "mutex_unlink path"$/
MUTEXV_USAGE	../test/tcl_mutex.c	/^#define MUTEXV_USAGE "mutexN {set,get}val id val"$/
MUTEXWIDGET_USAGE	../test/tcl_mutex.c	/^#define MUTEXWIDGET_USAGE "mutexN option ?arg arg /
MUTEX_ALIGNMENT	../include/db_int.h	/^#define	MUTEX_ALIGNMENT	@mutex_align@$/
MUTEX_FILE	../test/tcl_mutex.c	/^#define MUTEX_FILE "__mutex.share"$/
MUTEX_LOCK_OFFSET	../include/db_int.h	/^#define	MUTEX_LOCK_OFFSET(a, b)	((u_int32_t)((u_in/
MUTEX_USAGE	../test/tcl_mutex.c	/^#define MUTEX_USAGE "mutex_init path nitems flags /
M_16_SWAP	../include/db_swap.h	/^#define	M_16_SWAP(a) {							\\$/
M_32_SWAP	../include/db_swap.h	/^#define	M_32_SWAP(a) {							\\$/
NCACHED	../include/db_page.h	/^#define NCACHED	32		\/* number of spare points *\//
NDBMCLEAR_USAGE	../test/tcl_ndbm.c	/^#define NDBMCLEAR_USAGE "ndbmN clearerr"$/
NDBMCLOSE_USAGE	../test/tcl_ndbm.c	/^#define NDBMCLOSE_USAGE "ndbmN close"$/
NDBMDEL_USAGE	../test/tcl_ndbm.c	/^#define NDBMDEL_USAGE "ndbmN delete key"$/
NDBMDIRFNO_USAGE	../test/tcl_ndbm.c	/^#define NDBMDIRFNO_USAGE "ndbmM dirfno"$/
NDBMERROR_USAGE	../test/tcl_ndbm.c	/^#define NDBMERROR_USAGE "ndbmN error"$/
NDBMFETCH_USAGE	../test/tcl_ndbm.c	/^#define NDBMFETCH_USAGE "ndbmN fetch key"$/
NDBMFIRST_USAGE	../test/tcl_ndbm.c	/^#define NDBMFIRST_USAGE "ndbmN firstkey"$/
NDBMNEXT_USAGE	../test/tcl_ndbm.c	/^#define NDBMNEXT_USAGE "ndbmN nextkey"$/
NDBMOPEN_USAGE	../test/tcl_ndbm.c	/^#define NDBMOPEN_USAGE "ndbm_open file flags mode"/
NDBMPAGFNO_USAGE	../test/tcl_ndbm.c	/^#define NDBMPAGFNO_USAGE "ndbmM pagfno"$/
NDBMRDONLY_USAGE	../test/tcl_ndbm.c	/^#define NDBMRDONLY_USAGE "ndbmM rdonly"$/
NDBMSTORE_USAGE	../test/tcl_ndbm.c	/^#define NDBMSTORE_USAGE "ndbmN store key datum fla/
NDBMWIDGET_USAGE	../test/tcl_ndbm.c	/^#define NDBMWIDGET_USAGE "ndbmN option ?arg arg ../
NDX_INVALID	../include/hash.h	/^#define	NDX_INVALID	0xFFFF$/
NEXT_PGNO	../include/db_page.h	/^#define	NEXT_PGNO(p)	(((PAGE *)p)->next_pgno)$/
NUM_ENT	../include/db_page.h	/^#define	NUM_ENT(p)	(((PAGE *)p)->entries)$/
OBJ_TO_OFFSET	../include/lock.h	/^#define OBJ_TO_OFFSET(lt, obj) \\$/
OFFSET_TO_LOCK	../include/lock.h	/^#define OFFSET_TO_LOCK(lt, off)	\\$/
OFFSET_TO_OBJ	../include/lock.h	/^#define OFFSET_TO_OBJ(lt, off)	\\$/
OKFLAGS	../common/db_appinit.c	/^#define	OKFLAGS								\\$/
OK_FLAGS	../xa/xa.c	/^#define	OK_FLAGS	(TMJOIN | TMRESUME | TMNOWAIT | T/
OPCODE_OF	../include/hash.h	/^#define	OPCODE_OF(N)    	(N & ~(PAIR_KEYMASK | PAI/
OR_MAP	../lock/lock_deadlock.c	/^#define	OR_MAP(D, S, N)	{						\\$/
OVPUT	../btree/bt_put.c	/^#define	OVPUT(h, indx, bo) do {						\\$/
OV_LEN	../include/db_page.h	/^#define	OV_LEN(p)	(((PAGE *)p)->hf_offset)$/
OV_REF	../include/db_page.h	/^#define	OV_REF(p)	(((PAGE *)p)->entries)$/
O_INDX	../include/db_page.h	/^#define	O_INDX	1$/
PAGECHECK_USAGE	../test/tcl_mpool.c	/^#define PAGECHECK_USAGE "pageN check str"$/
PAGEGET_USAGE	../test/tcl_mpool.c	/^#define PAGEGET_USAGE "pageN get"$/
PAGEINIT_USAGE	../test/tcl_mpool.c	/^#define PAGEINIT_USAGE "pageN init str"$/
PAGEPUT_USAGE	../test/tcl_mpool.c	/^#define PAGEPUT_USAGE "pageN put flags"$/
PAGE_USAGE	../test/tcl_mpool.c	/^#define PAGE_USAGE "pageN option ?arg arg ...?"$/
PAIR_DATAMASK	../include/hash.h	/^#define	PAIR_DATAMASK		0x2$/
PAIR_ISDATABIG	../include/hash.h	/^#define	PAIR_ISDATABIG(N)	(N & PAIR_DATAMASK)$/
PAIR_ISKEYBIG	../include/hash.h	/^#define	PAIR_ISKEYBIG(N)	(N & PAIR_KEYMASK)$/
PAIR_KEYMASK	../include/hash.h	/^#define	PAIR_KEYMASK		0x1$/
PATH_DOT	../include/db_int.h	/^#define	PATH_DOT	"."	\/* Current working directory/
PATH_SEPARATOR	../include/db_int.h	/^#define	PATH_SEPARATOR	"\/"	\/* Path separator cha/
PGNO	../include/db_page.h	/^#define	PGNO(p)		(((PAGE *)p)->pgno)$/
PGNO_INVALID	../include/db_page.h	/^#define	PGNO_INVALID	0	\/* Metadata page number, t/
PGNO_METADATA	../include/db_page.h	/^#define	PGNO_METADATA	0	\/* Metadata page number. /
PGNO_OF	../include/hash.h	/^#define	PGNO_OF(I, S, O) (BUCKET_TO_PAGE((I), (1 </
PGNO_ROOT	../include/db_page.h	/^#define	PGNO_ROOT	1	\/* Root is page #1. *\/$/
POSSIBLE_DUPLICATE	../btree/bt_cursor.c	/^#define	POSSIBLE_DUPLICATE(cursor, saved_copy)				/
PREV_PGNO	../include/db_page.h	/^#define	PREV_PGNO(p)	(((PAGE *)p)->prev_pgno)$/
PSIZE_BOUNDARY	../db/db_pr.c	/^#define	PSIZE_BOUNDARY	(64 * 1024 + 1)$/
PUTOVFL	../include/hash.h	/^#define	PUTOVFL		0x40$/
PUTPAIR	../include/hash.h	/^#define	PUTPAIR		0x20$/
PUT_HKEYDATA	../include/db_page.h	/^#define	PUT_HKEYDATA(pe, kd, len, type) {				\\$/
P_16_COPY	../include/db_swap.h	/^#define	P_16_COPY(a, b) {						\\$/
P_16_SWAP	../include/db_swap.h	/^#define	P_16_SWAP(a) {							\\$/
P_32_COPY	../include/db_swap.h	/^#define	P_32_COPY(a, b) {						\\$/
P_32_SWAP	../include/db_swap.h	/^#define	P_32_SWAP(a) {							\\$/
P_DUPLICATE	../include/db_page.h	/^#define	P_DUPLICATE	1	\/*        Duplicate. *\/$/
P_ENTRY	../include/db_page.h	/^#define	P_ENTRY(pg, indx)	((u_int8_t *)pg + ((PAGE/
P_FREESPACE	../include/db_page.h	/^#define	P_FREESPACE(pg)		(HOFFSET(pg) - LOFFSET(pg/
P_HASH	../include/db_page.h	/^#define	P_HASH		2	\/*        Hash. *\/$/
P_IBTREE	../include/db_page.h	/^#define	P_IBTREE	3	\/*        Btree internal. *\/$/
P_INDX	../include/db_page.h	/^#define	P_INDX	2$/
P_INIT	../include/db_page.h	/^#define	P_INIT(pg, pg_size, n, pg_prev, pg_next, b/
P_INVALID	../include/db_page.h	/^#define	P_INVALID	0	\/*	  Invalid page type. *\/$/
P_IRECNO	../include/db_page.h	/^#define	P_IRECNO	4	\/*        Recno internal. *\/$/
P_LBTREE	../include/db_page.h	/^#define	P_LBTREE	5	\/*        Btree leaf. *\/$/
P_LRECNO	../include/db_page.h	/^#define	P_LRECNO	6	\/*        Recno leaf. *\/$/
P_MAXSPACE	../include/db_page.h	/^#define	P_MAXSPACE(psize)	((psize) - P_OVERHEAD)$/
P_OVERFLOW	../include/db_page.h	/^#define	P_OVERFLOW	7	\/*        Overflow. *\/$/
P_OVERHEAD	../include/db_page.h	/^#define P_OVERHEAD		(SSZA(PAGE, inp))$/
RANDOMINT_USAGE	../test/utils.c	/^#define RANDOMINT_USAGE "random_int lo hi"$/
RAND_MAX	../test/utils.c	/^#define	RAND_MAX	0x7fffffff$/
RAND_USAGE	../test/utils.c	/^#define RAND_USAGE "rand"$/
RECNO_EOF	../include/btree.h	/^#define	RECNO_EOF	0x0001		\/* EOF on backing sourc/
RECNO_MODIFIED	../include/btree.h	/^#define	RECNO_MODIFIED	0x0002		\/* Tree was modifi/
RECNO_OOB	../include/btree.h	/^#define	RECNO_OOB	0		\/* Illegal record number. */
REC_CLOSE	../include/db_am.h	/^#define	REC_CLOSE {							\\$/
REC_INTRO	../include/db_am.h	/^#define	REC_INTRO(func) {						\\$/
REC_NOOP_CLOSE	../include/db_am.h	/^#define	REC_NOOP_CLOSE {						\\$/
REC_NOOP_INTRO	../include/db_am.h	/^#define	REC_NOOP_INTRO(func) {						\\$/
REC_PRINT	../include/db_am.h	/^#define	REC_PRINT(func)							\\$/
REGION_ANONYMOUS	../include/db_int.h	/^#define	REGION_ANONYMOUS	0x01	\/* Region is\/shoul/
REGION_CANGROW	../include/db_int.h	/^#define	REGION_CANGROW		0x0002	\/* Can grow. *\/$/
REGION_CREATED	../include/db_int.h	/^#define	REGION_CREATED		0x0004	\/* Created. *\/$/
REGION_HOLDINGSYS	../include/db_int.h	/^#define	REGION_HOLDINGSYS	0x0008	\/* Holding syste/
REGION_LASTDETACH	../include/db_int.h	/^#define	REGION_LASTDETACH	0x0010	\/* Delete on las/
REGION_MALLOC	../include/db_int.h	/^#define	REGION_MALLOC		0x0020	\/* Created in mallo/
REGION_PRIVATE	../include/db_int.h	/^#define	REGION_PRIVATE		0x0040	\/* Private to thre/
REGION_REMOVED	../include/db_int.h	/^#define	REGION_REMOVED		0x0080	\/* Already deleted/
REGION_SIZEDEF	../include/db_int.h	/^#define	REGION_SIZEDEF		0x0100	\/* Use default reg/
RELEASE_META	../include/hash.h	/^#define	RELEASE_META(D, I) {						\\$/
RESTORE_CURSOR	../include/hash.h	/^#define	RESTORE_CURSOR(D, ORIG, COPY, RET) {				\\/
RET_ERROR	../include/db_185.h	/^#define	RET_ERROR	-1		\/* Return values. *\/$/
RET_SPECIAL	../include/db_185.h	/^#define	RET_SPECIAL	 1$/
RET_SUCCESS	../include/db_185.h	/^#define	RET_SUCCESS	 0$/
RE_NREC	../include/db_page.h	/^#define	RE_NREC(p)							\\$/
RE_NREC_ADJ	../include/db_page.h	/^#define	RE_NREC_ADJ(p, adj)						\\$/
RE_NREC_SET	../include/db_page.h	/^#define	RE_NREC_SET(p, num)						\\$/
RINTERNAL_PSIZE	../include/db_page.h	/^#define	RINTERNAL_PSIZE							\\$/
RINTERNAL_SIZE	../include/db_page.h	/^#define	RINTERNAL_SIZE							\\$/
RMNAMESZ	../include/xa.h	/^#define	RMNAMESZ	32		\/* length of resource manage/
RSMSG	../db185/db185.c	/^#define	RSMSG	"DB: DB 1.85's R_RECNOSYNC sync flag/
R_ADDR	../include/db_int.h	/^#define	R_ADDR(base, offset)	((void *)((u_int8_t */
R_CURSOR	../include/db_185.h	/^#define	R_CURSOR	1		\/* del, put, seq *\/$/
R_DUP	../include/db_185.h	/^#define	R_DUP		0x01	\/* duplicate keys *\/$/
R_FIRST	../include/db_185.h	/^#define	R_FIRST		3		\/* seq *\/$/
R_FIXEDLEN	../include/db_185.h	/^#define	R_FIXEDLEN	0x01	\/* fixed-length records */
R_IAFTER	../include/db_185.h	/^#define	R_IAFTER	4		\/* put (RECNO) *\/$/
R_IBEFORE	../include/db_185.h	/^#define	R_IBEFORE	5		\/* put (RECNO) *\/$/
R_LAST	../include/db_185.h	/^#define	R_LAST		6		\/* seq (BTREE, RECNO) *\/$/
R_NEXT	../include/db_185.h	/^#define	R_NEXT		7		\/* seq *\/$/
R_NOKEY	../include/db_185.h	/^#define	R_NOKEY		0x02	\/* key not required *\/$/
R_NOOVERWRITE	../include/db_185.h	/^#define	R_NOOVERWRITE	8		\/* put *\/$/
R_OFFSET	../include/db_int.h	/^#define	R_OFFSET(base, p)	((u_int8_t *)(p) - (u_in/
R_PREV	../include/db_185.h	/^#define	R_PREV		9		\/* seq (BTREE, RECNO) *\/$/
R_RECNOSYNC	../include/db_185.h	/^#define	R_RECNOSYNC	11		\/* sync (RECNO) *\/$/
R_SETCURSOR	../include/db_185.h	/^#define	R_SETCURSOR	10		\/* put (RECNO) *\/$/
R_SNAPSHOT	../include/db_185.h	/^#define	R_SNAPSHOT	0x04	\/* snapshot the input *\//
SAVE_CURSOR	../include/hash.h	/^#define	SAVE_CURSOR(ORIG, COPY) {					\\$/
SECOND	../mutex/mutex.c	/^#define	SECOND		(MS(1000))	\/* A second's worth of/
SET_MAP	../lock/lock_deadlock.c	/^#define	SET_MAP(M, B)	(M[(B) \/ 32] |= (1 << ((B) /
SHALLOC_FRAGMENT	../common/db_salloc.c	/^#define	SHALLOC_FRAGMENT	32$/
SH_CIRCLEQ_END	../include/shqueue.h	/^#define	SH_CIRCLEQ_END(head)		((void *)(head))$/
SH_CIRCLEQ_ENTRY	../include/shqueue.h	/^#define SH_CIRCLEQ_ENTRY						\\$/
SH_CIRCLEQ_FIRST	../include/shqueue.h	/^#define SH_CIRCLEQ_FIRST(head, type)					\\$/
SH_CIRCLEQ_FIRSTP	../include/shqueue.h	/^#define SH_CIRCLEQ_FIRSTP(head, type)					\\$/
SH_CIRCLEQ_HEAD	../include/shqueue.h	/^#define SH_CIRCLEQ_HEAD(name)						\\$/
SH_CIRCLEQ_INIT	../include/shqueue.h	/^#define	SH_CIRCLEQ_INIT(head) {						\\$/
SH_CIRCLEQ_INSERT_AFTER	../include/shqueue.h	/^#define SH_CIRCLEQ_INSERT_AFTER(head, listelm, elm/
SH_CIRCLEQ_INSERT_BEFORE	../include/shqueue.h	/^#define SH_CIRCLEQ_INSERT_BEFORE(head, listelm, el/
SH_CIRCLEQ_INSERT_HEAD	../include/shqueue.h	/^#define SH_CIRCLEQ_INSERT_HEAD(head, elm, field, t/
SH_CIRCLEQ_INSERT_TAIL	../include/shqueue.h	/^#define SH_CIRCLEQ_INSERT_TAIL(head, elm, field, t/
SH_CIRCLEQ_LAST	../include/shqueue.h	/^#define SH_CIRCLEQ_LAST(head, type)					\\$/
SH_CIRCLEQ_LASTP	../include/shqueue.h	/^#define SH_CIRCLEQ_LASTP(head, type)					\\$/
SH_CIRCLEQ_NEXT	../include/shqueue.h	/^#define SH_CIRCLEQ_NEXT(head, elm, field, type)			/
SH_CIRCLEQ_NEXTP	../include/shqueue.h	/^#define SH_CIRCLEQ_NEXTP(elm, field, type)				\\$/
SH_CIRCLEQ_PREV	../include/shqueue.h	/^#define SH_CIRCLEQ_PREV(head, elm, field, type)			/
SH_CIRCLEQ_PREVP	../include/shqueue.h	/^#define SH_CIRCLEQ_PREVP(elm, field, type)				\\$/
SH_CIRCLEQ_REMOVE	../include/shqueue.h	/^#define	SH_CIRCLEQ_REMOVE(head, elm, field, type) /
SH_DBT_PTR	../include/lock.h	/^#define SH_DBT_PTR(p)	((void *)(((u_int8_t *)(p)) /
SH_LIST_END	../include/shqueue.h	/^#define	SH_LIST_END(head)			NULL$/
SH_LIST_ENTRY	../include/shqueue.h	/^#define SH_LIST_ENTRY							\\$/
SH_LIST_FIRST	../include/shqueue.h	/^#define SH_LIST_FIRST(head, type)					\\$/
SH_LIST_FIRSTP	../include/shqueue.h	/^#define SH_LIST_FIRSTP(head, type)					\\$/
SH_LIST_HEAD	../include/shqueue.h	/^#define SH_LIST_HEAD(name)						\\$/
SH_LIST_INIT	../include/shqueue.h	/^#define	SH_LIST_INIT(head) (head)->slh_first = -1$/
SH_LIST_INSERT_AFTER	../include/shqueue.h	/^#define SH_LIST_INSERT_AFTER(listelm, elm, field, /
SH_LIST_INSERT_HEAD	../include/shqueue.h	/^#define SH_LIST_INSERT_HEAD(head, elm, field, type/
SH_LIST_NEXT	../include/shqueue.h	/^#define SH_LIST_NEXT(elm, field, type)					\\$/
SH_LIST_NEXTP	../include/shqueue.h	/^#define SH_LIST_NEXTP(elm, field, type)					\\$/
SH_LIST_NEXT_TO_PREV	../include/shqueue.h	/^#define SH_LIST_NEXT_TO_PREV(elm, field)				\\$/
SH_LIST_PREV	../include/shqueue.h	/^#define SH_LIST_PREV(elm, field)					\\$/
SH_LIST_REMOVE	../include/shqueue.h	/^#define SH_LIST_REMOVE(elm, field, type) do {				/
SH_PTR_TO_OFF	../include/shqueue.h	/^#define SH_PTR_TO_OFF(src, dest)					\\$/
SH_TAILQ_END	../include/shqueue.h	/^#define SH_TAILQ_END(head)		NULL$/
SH_TAILQ_ENTRY	../include/shqueue.h	/^#define SH_TAILQ_ENTRY							\\$/
SH_TAILQ_FIRST	../include/shqueue.h	/^#define SH_TAILQ_FIRST(head, type)					\\$/
SH_TAILQ_FIRSTP	../include/shqueue.h	/^#define SH_TAILQ_FIRSTP(head, type)					\\$/
SH_TAILQ_HEAD	../include/db_shash.h	/^typedef	SH_TAILQ_HEAD(hash_head) DB_HASHTAB;$/
SH_TAILQ_INIT	../include/shqueue.h	/^#define	SH_TAILQ_INIT(head) {						\\$/
SH_TAILQ_INSERT_AFTER	../include/shqueue.h	/^#define SH_TAILQ_INSERT_AFTER(head, listelm, elm, /
SH_TAILQ_INSERT_HEAD	../include/shqueue.h	/^#define SH_TAILQ_INSERT_HEAD(head, elm, field, typ/
SH_TAILQ_INSERT_TAIL	../include/shqueue.h	/^#define SH_TAILQ_INSERT_TAIL(head, elm, field) do /
SH_TAILQ_LAST	../include/shqueue.h	/^#define SH_TAILQ_LAST(head)						\\$/
SH_TAILQ_NEXT	../include/shqueue.h	/^#define SH_TAILQ_NEXT(elm, field, type)					\\$/
SH_TAILQ_NEXTP	../include/shqueue.h	/^#define SH_TAILQ_NEXTP(elm, field, type)				\\$/
SH_TAILQ_NEXT_TO_PREV	../include/shqueue.h	/^#define SH_TAILQ_NEXT_TO_PREV(elm, field)				\\$/
SH_TAILQ_PREVP	../include/shqueue.h	/^#define SH_TAILQ_PREVP(elm, field)					\\$/
SH_TAILQ_REMOVE	../include/shqueue.h	/^#define SH_TAILQ_REMOVE(head, elm, field, type) do/
SPLITNEW	../include/hash.h	/^#define	SPLITNEW	0x90$/
SPLITOLD	../include/hash.h	/^#define	SPLITOLD	0x80$/
SRAND_USAGE	../test/utils.c	/^#define SRAND_USAGE "srand seed"$/
SSZ	../include/db_int.h	/^#define SSZ(name, field)	((int)&(((name *)0)->fiel/
SSZA	../include/db_int.h	/^#define SSZA(name, field)	((int)&(((name *)0)->fie/
STAMP_USAGE	../test/utils.c	/^#define STAMP_USAGE "timestamp [-r]"$/
STDERR_FILENO	../db185/db185.c	/^#define	STDERR_FILENO	2$/
STRING_SIZE	../include/lock.h	/^#define STRING_SIZE(N) (16 * N)$/
SWAP16	../include/db_swap.h	/^#define	SWAP16(p) {							\\$/
SWAP32	../include/db_swap.h	/^#define	SWAP32(p) {							\\$/
S_APPEND	../include/btree.h	/^#define	S_APPEND	0x00040		\/* Append to the tree. /
S_DELETE	../include/btree.h	/^#define	S_DELETE	(S_WRITE | S_DUPFIRST | S_DELNO |/
S_DELNO	../include/btree.h	/^#define	S_DELNO		0x00080		\/* Don't return deleted/
S_DUPFIRST	../include/btree.h	/^#define	S_DUPFIRST	0x00100		\/* Return first dupli/
S_DUPLAST	../include/btree.h	/^#define	S_DUPLAST	0x00200		\/* Return last duplica/
S_EXACT	../include/btree.h	/^#define	S_EXACT		0x00400		\/* Exact items only. */
S_FIND	../include/btree.h	/^#define	S_FIND		(S_READ | S_DUPFIRST | S_DELNO)$/
S_FIND_WR	../include/btree.h	/^#define	S_FIND_WR	(S_WRITE | S_DUPFIRST | S_DELNO)/
S_INSERT	../include/btree.h	/^#define	S_INSERT	(S_WRITE | S_DUPLAST | S_PAST_EOF/
S_IRGRP	../os/os_oflags.c	/^#define	S_IRGRP	0		\/* R for group *\/$/
S_IROTH	../os/os_oflags.c	/^#define	S_IROTH	0		\/* R for other *\/$/
S_IRUSR	../os/os_oflags.c	/^#define	S_IRUSR	S_IREAD		\/* R for owner *\/$/
S_ISDIR	../os/os_stat.c	/^#define	S_ISDIR(m)	(_S_IFDIR & (m))$/
S_IWGRP	../os/os_oflags.c	/^#define	S_IWGRP	0		\/* W for group *\/$/
S_IWOTH	../os/os_oflags.c	/^#define	S_IWOTH	0		\/* W for other *\/$/
S_IWUSR	../os/os_oflags.c	/^#define	S_IWUSR	S_IWRITE	\/* W for owner *\/$/
S_KEYFIRST	../include/btree.h	/^#define	S_KEYFIRST	(S_WRITE | S_DUPFIRST | S_PAST_/
S_KEYLAST	../include/btree.h	/^#define	S_KEYLAST	(S_WRITE | S_DUPLAST | S_PAST_EO/
S_PARENT	../include/btree.h	/^#define	S_PARENT	0x00800		\/* Lock page pair. *\/$/
S_PAST_EOF	../include/btree.h	/^#define	S_PAST_EOF	0x02000		\/* If doing insert se/
S_READ	../include/btree.h	/^#define	S_READ		0x00001		\/* Read locks. *\/$/
S_STACK	../include/btree.h	/^#define	S_STACK		0x01000		\/* Need a complete stac/
S_WRITE	../include/btree.h	/^#define	S_WRITE		0x00002		\/* Write locks. *\/$/
S_WRPAIR	../include/btree.h	/^#define	S_WRPAIR	(S_WRITE | S_DUPLAST | S_PAST_EOF/
TAILQ_END	../include/queue.h	/^#define	TAILQ_END(head)			NULL$/
TAILQ_ENTRY	../include/queue.h	/^#define TAILQ_ENTRY(type)						\\$/
TAILQ_FIRST	../include/queue.h	/^#define	TAILQ_FIRST(head)		((head)->tqh_first)$/
TAILQ_HEAD	../include/queue.h	/^#define TAILQ_HEAD(name, type)						\\$/
TAILQ_INIT	../include/queue.h	/^#define	TAILQ_INIT(head) do {						\\$/
TAILQ_INSERT_AFTER	../include/queue.h	/^#define TAILQ_INSERT_AFTER(head, listelm, elm, fie/
TAILQ_INSERT_BEFORE	../include/queue.h	/^#define	TAILQ_INSERT_BEFORE(listelm, elm, field) d/
TAILQ_INSERT_HEAD	../include/queue.h	/^#define TAILQ_INSERT_HEAD(head, elm, field) do {		/
TAILQ_INSERT_TAIL	../include/queue.h	/^#define TAILQ_INSERT_TAIL(head, elm, field) do {		/
TAILQ_NEXT	../include/queue.h	/^#define	TAILQ_NEXT(elm, field)		((elm)->field.tqe_/
TAILQ_REMOVE	../include/queue.h	/^#define TAILQ_REMOVE(head, elm, field) do {				\\$/
TLOOP	../clib/memmove.c	/^#define	TLOOP(s) if (t) TLOOP1(s)$/
TLOOP1	../clib/memmove.c	/^#define	TLOOP1(s) do { s; } while (--t)$/
TMASYNC	../include/xa.h	/^#define	TMASYNC		0x80000000L	\/* perform routine a/
TMENDRSCAN	../include/xa.h	/^#define	TMENDRSCAN	0x00800000L	\/* end a recovery /
TMER_INVAL	../include/xa.h	/^#define	TMER_INVAL	-2		\/* invalid arguments were /
TMER_PROTO	../include/xa.h	/^#define	TMER_PROTO	-3		\/* routine invoked in an i/
TMER_TMERR	../include/xa.h	/^#define	TMER_TMERR	-1		\/* an error occurred in th/
TMFAIL	../include/xa.h	/^#define	TMFAIL		0x20000000L	\/* dissociates caller/
TMJOIN	../include/xa.h	/^#define	TMJOIN		0x00200000L	\/* caller is joining /
TMMIGRATE	../include/xa.h	/^#define	TMMIGRATE	0x00100000L	\/* caller intends t/
TMMULTIPLE	../include/xa.h	/^#define	TMMULTIPLE	0x00400000L	\/* wait for any as/
TMNOFLAGS	../include/xa.h	/^#define	TMNOFLAGS	0x00000000L	\/* no resource mana/
TMNOMIGRATE	../include/xa.h	/^#define	TMNOMIGRATE	0x00000002L	\/* resource manag/
TMNOWAIT	../include/xa.h	/^#define	TMNOWAIT	0x10000000L	\/* return if blockin/
TMONEPHASE	../include/xa.h	/^#define	TMONEPHASE	0x40000000L	\/* caller is using/
TMREGISTER	../include/xa.h	/^#define	TMREGISTER	0x00000001L	\/* resource manage/
TMRESUME	../include/xa.h	/^#define	TMRESUME	0x08000000L	\/* caller is resumin/
TMSTARTRSCAN	../include/xa.h	/^#define	TMSTARTRSCAN	0x01000000L	\/* start a recov/
TMSUCCESS	../include/xa.h	/^#define	TMSUCCESS	0x04000000L	\/* dissociate calle/
TMSUSPEND	../include/xa.h	/^#define	TMSUSPEND	0x02000000L	\/* caller is suspen/
TMUSEASYNC	../include/xa.h	/^#define	TMUSEASYNC	0x00000004L	\/* resource manage/
TM_JOIN	../include/xa.h	/^#define	TM_JOIN		2		\/* caller is joining existing/
TM_OK	../include/xa.h	/^#define	TM_OK		0		\/* normal execution *\/$/
TM_RESUME	../include/xa.h	/^#define	TM_RESUME	1		\/* caller is resuming associ/
TSL_INIT	../mutex/mutex.c	/^#define	TSL_INIT(x)$/
TSL_INIT_ERROR	../mutex/mutex.c	/^#define	TSL_INIT_ERROR	1$/
TSL_SET	../mutex/mutex.c	/^#define	TSL_SET(x)	(!_check_lock(x, 0, 1))$/
TSL_UNSET	../mutex/mutex.c	/^#define	TSL_UNSET(x)	_clear_lock(x, 0)$/
TXNABORT_USAGE	../test/tcl_txn.c	/^#define TXNABORT_USAGE "mgrN.txnM abort"$/
TXNBEGIN_USAGE	../test/tcl_txn.c	/^#define TXNBEGIN_USAGE "mgrN begin [parent]"$/
TXNCHECK_USAGE	../test/tcl_txn.c	/^#define TXNCHECK_USAGE "mgrN checkpoint [kbytes] [/
TXNCLOSE_USAGE	../test/tcl_txn.c	/^#define TXNCLOSE_USAGE "mgrN close"$/
TXNCOMMIT_USAGE	../test/tcl_txn.c	/^#define TXNCOMMIT_USAGE "mgrN.txnM commit"$/
TXNID_USAGE	../test/tcl_txn.c	/^#define TXNID_USAGE "mgrN.txnM id"$/
TXNMGR_USAGE	../test/tcl_txn.c	/^#define TXNMGR_USAGE "txn path flags mode [options/
TXNPREP_USAGE	../test/tcl_txn.c	/^#define TXNPREP_USAGE "mgrN.txnM prep"$/
TXNSTAT_USAGE	../test/tcl_txn.c	/^#define TXNSTAT_USAGE "mgrN stat"$/
TXNUNLINK_USAGE	../test/tcl_txn.c	/^#define TXNUNLINK_USAGE "txn_unlink path force"$/
TXNWIDGET_USAGE	../test/tcl_txn.c	/^#define TXNWIDGET_USAGE "mgrN option ?arg arg ...?/
TXN_ABORTED	../include/txn.h	/^#define	TXN_ABORTED	2$/
TXN_BACKWARD_ROLL	../include/db_dispatch.h	/^#define	TXN_BACKWARD_ROLL	-1$/
TXN_CHECKPOINT	../include/txn.h	/^#define	TXN_CHECKPOINT	3$/
TXN_COMMIT	../include/txn.h	/^#define	TXN_COMMIT	1$/
TXN_COMMITTED	../include/txn.h	/^#define	TXN_COMMITTED	4$/
TXN_FORWARD_ROLL	../include/db_dispatch.h	/^#define	TXN_FORWARD_ROLL	-2$/
TXN_INVALID	../include/txn.h	/^#define	TXN_INVALID           	0xffffffff \/* Maxi/
TXN_IS_HOLDING	../include/lock.h	/^#define TXN_IS_HOLDING(L)	((L)->txnoff != 0 \/* IN/
TXN_MALLOC	../include/db_int.h	/^#define	TXN_MALLOC	0x01		\/* Structure allocated b/
TXN_MINIMUM	../include/txn.h	/^#define TXN_MINIMUM		0x80000000$/
TXN_OPENFILES	../include/db_dispatch.h	/^#define TXN_OPENFILES		-3$/
TXN_PANIC_CHECK	../include/txn.h	/^#define	TXN_PANIC_CHECK(tmgrp) {					\\$/
TXN_PREPARE	../include/txn.h	/^#define	TXN_PREPARE	2$/
TXN_PREPARED	../include/txn.h	/^#define	TXN_PREPARED	3$/
TXN_REDO	../include/db_dispatch.h	/^#define	TXN_REDO		 1$/
TXN_REGION_SIZE	../include/txn.h	/^#define	TXN_REGION_SIZE(N)						\\$/
TXN_RUNNING	../include/txn.h	/^#define	TXN_RUNNING	1$/
TXN_UNALLOC	../include/txn.h	/^#define	TXN_UNALLOC	0$/
TXN_UNDO	../include/db_dispatch.h	/^#define	TXN_UNDO		 0$/
TXN_USAGE	../test/tcl_txn.c	/^#define TXN_USAGE "mgrN.txnM cmd ?arg arg ...?"$/
TXN_XA_ABORTED	../include/txn.h	/^#define	TXN_XA_ABORTED		1$/
TXN_XA_DEADLOCKED	../include/txn.h	/^#define	TXN_XA_DEADLOCKED	2$/
TXN_XA_ENDED	../include/txn.h	/^#define	TXN_XA_ENDED		3$/
TXN_XA_PREPARED	../include/txn.h	/^#define	TXN_XA_PREPARED		4$/
TXN_XA_STARTED	../include/txn.h	/^#define	TXN_XA_STARTED		5$/
TXN_XA_SUSPENDED	../include/txn.h	/^#define	TXN_XA_SUSPENDED	6$/
TYPE	../include/db_page.h	/^#define	TYPE(p)		(((PAGE *)p)->type)$/
Tcl_AppInit	../test/tclAppInit.c	/^Tcl_AppInit(interp)$/
UINT16_T_MAX	../include/db_int.h	/^#define	UINT16_T_MAX	    0xffff	\/* Maximum 16 bit/
UINT32_T_MAX	../include/db_int.h	/^#define	UINT32_T_MAX	0xffffffff	\/* Maximum 32 bit/
UMRW	../include/db_int.h	/^#define	UMRW(v)		(v) = 0$/
UNLOCKBUFFER	../include/mp.h	/^#define	UNLOCKBUFFER(dbmp, bhp)						\\$/
UNLOCKHANDLE	../include/mp.h	/^#define	UNLOCKHANDLE(dbmp, mutexp)					\\$/
UNLOCKREGION	../include/mp.h	/^#define	UNLOCKREGION(dbmp)						\\$/
UNLOCK_LOCKREGION	../include/lock.h	/^#define	UNLOCK_LOCKREGION(lt)						\\$/
UNLOCK_LOGREGION	../include/log.h	/^#define	UNLOCK_LOGREGION(dblp)						\\$/
UNLOCK_LOGTHREAD	../include/log.h	/^#define	UNLOCK_LOGTHREAD(dblp)						\\$/
UNLOCK_TXNREGION	../include/txn.h	/^#define	UNLOCK_TXNREGION(tmgrp)						\\$/
UNLOCK_TXNTHREAD	../include/txn.h	/^#define	UNLOCK_TXNTHREAD(tmgrp)						\\$/
UPREFIX	../clib/strerror.c	/^#define	UPREFIX	"Unknown error: "$/
USAGE	../test/test_ext.h	/^#define USAGE(AC, R, STR, F)					\\$/
USAGE_GE	../test/test_ext.h	/^#define USAGE_GE(AC, DAC, STR, F)				\\$/
USAGE_RANGE	../test/test_ext.h	/^#define USAGE_RANGE(AC, RL, RH, STR, F)				\\$/
VERSION_USAGE	../test/utils.c	/^#define VERSION_USAGE "db_version"$/
WORDS_BIGENDIAN	../common/db_byteorder.c	/^#define	WORDS_BIGENDIAN	1$/
WRAPPED_CLASS	../include/cxx_int.h	/^WRAPPED_CLASS(DbLockTab, DbLockTabImp, DB_LOCKTAB*/
XAER_ASYNC	../include/xa.h	/^#define	XAER_ASYNC	-2		\/* asynchronous operation /
XAER_DUPID	../include/xa.h	/^#define	XAER_DUPID	-8		\/* the XID already exists /
XAER_INVAL	../include/xa.h	/^#define	XAER_INVAL	-5		\/* invalid arguments were /
XAER_NOTA	../include/xa.h	/^#define	XAER_NOTA	-4		\/* the XID is not valid *\//
XAER_OUTSIDE	../include/xa.h	/^#define	XAER_OUTSIDE	-9		\/* resource manager doin/
XAER_PROTO	../include/xa.h	/^#define	XAER_PROTO	-6		\/* routine invoked in an i/
XAER_RMERR	../include/xa.h	/^#define	XAER_RMERR	-3		\/* a resource manager erro/
XAER_RMFAIL	../include/xa.h	/^#define	XAER_RMFAIL	-7		\/* resource manager unava/
XA_FLAGS	../xa/xa.c	/^#define	XA_FLAGS DB_RECOVER | \\$/
XA_H	../include/xa.h	/^#define	XA_H$/
XA_HEURCOM	../include/xa.h	/^#define	XA_HEURCOM	7		\/* the transaction branch h/
XA_HEURHAZ	../include/xa.h	/^#define	XA_HEURHAZ	8		\/* the transaction branch m/
XA_HEURMIX	../include/xa.h	/^#define	XA_HEURMIX	5		\/* the transaction branch h/
XA_HEURRB	../include/xa.h	/^#define	XA_HEURRB	6		\/* the transaction branch ha/
XA_NOMIGRATE	../include/xa.h	/^#define	XA_NOMIGRATE	9		\/* resumption must occur /
XA_OK	../include/xa.h	/^#define	XA_OK		0		\/* normal execution *\/$/
XA_RBBASE	../include/xa.h	/^#define	XA_RBBASE	100		\/* The inclusive lower bou/
XA_RBCOMMFAIL	../include/xa.h	/^#define	XA_RBCOMMFAIL	XA_RBBASE+1	\/* The rollback/
XA_RBDEADLOCK	../include/xa.h	/^#define	XA_RBDEADLOCK	XA_RBBASE+2	\/* A deadlock w/
XA_RBEND	../include/xa.h	/^#define	XA_RBEND	XA_RBTRANSIENT	\/* The inclusive /
XA_RBINTEGRITY	../include/xa.h	/^#define	XA_RBINTEGRITY	XA_RBBASE+3	\/* A condition/
XA_RBOTHER	../include/xa.h	/^#define	XA_RBOTHER	XA_RBBASE+4	\/* The resource ma/
XA_RBPROTO	../include/xa.h	/^#define	XA_RBPROTO	XA_RBBASE+5	\/* A protocol erro/
XA_RBROLLBACK	../include/xa.h	/^#define	XA_RBROLLBACK	XA_RBBASE	\/* The rollback w/
XA_RBTIMEOUT	../include/xa.h	/^#define	XA_RBTIMEOUT	XA_RBBASE+6	\/* A transaction/
XA_RBTRANSIENT	../include/xa.h	/^#define	XA_RBTRANSIENT	XA_RBBASE+7	\/* May retry t/
XA_RDONLY	../include/xa.h	/^#define	XA_RDONLY	3		\/* the transaction branch wa/
XA_RETRY	../include/xa.h	/^#define	XA_RETRY	4		\/* routine returned with no e/
XIDDATASIZE	../include/xa.h	/^#define	XIDDATASIZE	128		\/* size in bytes *\/$/
ZERO_LSN	../include/db_int.h	/^#define	ZERO_LSN(LSN) {							\\$/
_CXX_INT_H_	../include/cxx_int.h	/^#define _CXX_INT_H_$/
_DB185_H_	../db185/db185_int.h	/^#define	_DB185_H_$/
_DB_185_H_	../include/db_185.h	/^#define	_DB_185_H_$/
_DB_AM_H	../include/db_am.h	/^#define _DB_AM_H$/
_DB_CXX_H_	../include/db_cxx.h	/^#define _DB_CXX_H_$/
_DB_DISPATCH_H	../include/db_dispatch.h	/^#define _DB_DISPATCH_H$/
_DB_H_	../include/db.h	/^#define	_DB_H_$/
_DB_INTERNAL_H_	../include/db_int.h	/^#define	_DB_INTERNAL_H_$/
_DB_JOIN_H	../include/db_join.h	/^#define _DB_JOIN_H$/
_DB_PAGE_H_	../include/db_page.h	/^#define	_DB_PAGE_H_$/
_DB_SWAP_H_	../include/db_swap.h	/^#define	_DB_SWAP_H_$/
_LOG_H_	../include/log.h	/^#define	_LOG_H_$/
_SYS_QUEUE_H_	../include/queue.h	/^#define	_SYS_QUEUE_H_$/
_SYS_SHQUEUE_H_	../include/shqueue.h	/^#define	_SYS_SHQUEUE_H_$/
_TXN_H_	../include/txn.h	/^#define	_TXN_H_$/
__BIT_TYPES_DEFINED__	../include/db.h	/^#define	__BIT_TYPES_DEFINED__$/
__BT_LPUT	../include/btree.h	/^#define	__BT_LPUT(dbc, lock)						\\$/
__BT_TLPUT	../include/btree.h	/^#define	__BT_TLPUT(dbc, lock)						\\$/
__P	../include/db.h	/^#define	__P(protos)	protos		\/* ANSI C prototypes /
__R_UNUSED	../include/db_185.h	/^#define	__R_UNUSED	2		\/* UNUSED *\/$/
__absname	../log/log_archive.c	/^__absname(pref, name, newnamep)$/
__bam_adj_log	../btree/btree_auto.c	/^int __bam_adj_log(logp, txnid, ret_lsnp, flags,$/
__bam_adj_print	../btree/btree_auto.c	/^__bam_adj_print(notused1, dbtp, lsnp, notused2, no/
__bam_adj_read	../btree/btree_auto.c	/^__bam_adj_read(recbuf, argpp)$/
__bam_adj_recover	../btree/bt_rec.c	/^__bam_adj_recover(logp, dbtp, lsnp, redo, info)$/
__bam_adjindx	../btree/bt_delete.c	/^__bam_adjindx(dbc, h, indx, indx_copy, is_insert)$/
__bam_adjust	../btree/bt_rsearch.c	/^__bam_adjust(dbc, adjust)$/
__bam_broot	../btree/bt_split.c	/^__bam_broot(dbc, rootp, lp, rp)$/
__bam_c_close	../btree/bt_cursor.c	/^__bam_c_close(dbc)$/
__bam_c_del	../btree/bt_cursor.c	/^__bam_c_del(dbc, flags)$/
__bam_c_destroy	../btree/bt_cursor.c	/^__bam_c_destroy(dbc)$/
__bam_c_first	../btree/bt_cursor.c	/^__bam_c_first(dbc, cp)$/
__bam_c_get	../btree/bt_cursor.c	/^__bam_c_get(dbc, key, data, flags)$/
__bam_c_getstack	../btree/bt_cursor.c	/^__bam_c_getstack(dbc, cp)$/
__bam_c_init	../btree/bt_cursor.c	/^__bam_c_init(dbc)$/
__bam_c_last	../btree/bt_cursor.c	/^__bam_c_last(dbc, cp)$/
__bam_c_next	../btree/bt_cursor.c	/^__bam_c_next(dbc, cp, initial_move)$/
__bam_c_physdel	../btree/bt_cursor.c	/^__bam_c_physdel(dbc, cp, h)$/
__bam_c_prev	../btree/bt_cursor.c	/^__bam_c_prev(dbc, cp)$/
__bam_c_put	../btree/bt_cursor.c	/^__bam_c_put(dbc, key, data, flags)$/
__bam_c_reset	../btree/bt_cursor.c	/^__bam_c_reset(cp)$/
__bam_c_rget	../btree/bt_cursor.c	/^__bam_c_rget(dbc, data, flags)$/
__bam_c_search	../btree/bt_cursor.c	/^__bam_c_search(dbc, cp, key, flags, exactp)$/
__bam_ca_delete	../btree/bt_curadj.c	/^__bam_ca_delete(dbp, pgno, indx, delete)$/
__bam_ca_di	../btree/bt_curadj.c	/^__bam_ca_di(dbp, pgno, indx, adjust)$/
__bam_ca_dup	../btree/bt_curadj.c	/^__bam_ca_dup(dbp, fpgno, first, fi, tpgno, ti)$/
__bam_ca_rsplit	../btree/bt_curadj.c	/^__bam_ca_rsplit(dbp, fpgno, tpgno)$/
__bam_ca_split	../btree/bt_curadj.c	/^__bam_ca_split(dbp, ppgno, lpgno, rpgno, split_ind/
__bam_cadjust_log	../btree/btree_auto.c	/^int __bam_cadjust_log(logp, txnid, ret_lsnp, flags/
__bam_cadjust_print	../btree/btree_auto.c	/^__bam_cadjust_print(notused1, dbtp, lsnp, notused2/
__bam_cadjust_read	../btree/btree_auto.c	/^__bam_cadjust_read(recbuf, argpp)$/
__bam_cadjust_recover	../btree/bt_rec.c	/^__bam_cadjust_recover(logp, dbtp, lsnp, redo, info/
__bam_cdel_log	../btree/btree_auto.c	/^int __bam_cdel_log(logp, txnid, ret_lsnp, flags,$/
__bam_cdel_print	../btree/btree_auto.c	/^__bam_cdel_print(notused1, dbtp, lsnp, notused2, n/
__bam_cdel_read	../btree/btree_auto.c	/^__bam_cdel_read(recbuf, argpp)$/
__bam_cdel_recover	../btree/bt_rec.c	/^__bam_cdel_recover(logp, dbtp, lsnp, redo, info)$/
__bam_close	../btree/bt_open.c	/^__bam_close(dbp)$/
__bam_cmp	../btree/bt_compare.c	/^__bam_cmp(dbp, dbt, h, indx, func)$/
__bam_copy	../btree/bt_split.c	/^__bam_copy(dbp, pp, cp, nxt, stop)$/
__bam_cprint	../btree/bt_curadj.c	/^__bam_cprint(dbp)$/
__bam_defcmp	../btree/bt_compare.c	/^__bam_defcmp(a, b)$/
__bam_defpfx	../btree/bt_compare.c	/^__bam_defpfx(a, b)$/
__bam_delete	../btree/bt_delete.c	/^__bam_delete(dbp, txn, key, flags)$/
__bam_ditem	../btree/bt_delete.c	/^__bam_ditem(dbc, h, indx)$/
__bam_dpage	../btree/bt_delete.c	/^__bam_dpage(dbc, key)$/
__bam_dpages	../btree/bt_delete.c	/^__bam_dpages(dbc)$/
__bam_dsearch	../btree/bt_cursor.c	/^__bam_dsearch(dbc, cp, data, iflagp)$/
__bam_dup	../btree/bt_cursor.c	/^__bam_dup(dbc, cp, indx, last_dup)$/
__bam_fixed	../btree/bt_put.c	/^__bam_fixed(dbc, dbt)$/
__bam_free	../btree/bt_page.c	/^__bam_free(dbc, h)$/
__bam_iitem	../btree/bt_put.c	/^__bam_iitem(dbc, hp, indxp, key, data, op, flags)$/
__bam_init_print	../btree/btree_auto.c	/^__bam_init_print(dbenv)$/
__bam_init_recover	../btree/btree_auto.c	/^__bam_init_recover(dbenv)$/
__bam_lget	../btree/bt_page.c	/^__bam_lget(dbc, do_couple, pgno, mode, lockp)$/
__bam_lput	../btree/bt_page.c	/^__bam_lput(dbc, lock)$/
__bam_lt	../btree/bt_page.c	/^__bam_lt(dbc)$/
__bam_mswap	../btree/bt_conv.c	/^__bam_mswap(pg)$/
__bam_ndup	../btree/bt_put.c	/^__bam_ndup(dbc, h, indx)$/
__bam_new	../btree/bt_page.c	/^__bam_new(dbc, type, pagepp)$/
__bam_nrecs	../btree/bt_rsearch.c	/^__bam_nrecs(dbc, rep)$/
__bam_open	../btree/bt_open.c	/^__bam_open(dbp, dbinfo)$/
__bam_ovput	../btree/bt_put.c	/^__bam_ovput(dbc, h, indx, item)$/
__bam_page	../btree/bt_split.c	/^__bam_page(dbc, pp, cp)$/
__bam_partial	../btree/bt_put.c	/^__bam_partial(dbc, dbt, h, indx, nbytes, flags)$/
__bam_partsize	../btree/bt_put.c	/^__bam_partsize(data, h, indx)$/
__bam_pg_alloc_log	../btree/btree_auto.c	/^int __bam_pg_alloc_log(logp, txnid, ret_lsnp, flag/
__bam_pg_alloc_print	../btree/btree_auto.c	/^__bam_pg_alloc_print(notused1, dbtp, lsnp, notused/
__bam_pg_alloc_read	../btree/btree_auto.c	/^__bam_pg_alloc_read(recbuf, argpp)$/
__bam_pg_alloc_recover	../btree/bt_rec.c	/^__bam_pg_alloc_recover(logp, dbtp, lsnp, redo, inf/
__bam_pg_free_log	../btree/btree_auto.c	/^int __bam_pg_free_log(logp, txnid, ret_lsnp, flags/
__bam_pg_free_print	../btree/btree_auto.c	/^__bam_pg_free_print(notused1, dbtp, lsnp, notused2/
__bam_pg_free_read	../btree/btree_auto.c	/^__bam_pg_free_read(recbuf, argpp)$/
__bam_pg_free_recover	../btree/bt_rec.c	/^__bam_pg_free_recover(logp, dbtp, lsnp, redo, info/
__bam_pgin	../btree/bt_conv.c	/^__bam_pgin(pg, pp, cookie)$/
__bam_pgout	../btree/bt_conv.c	/^__bam_pgout(pg, pp, cookie)$/
__bam_pinsert	../btree/bt_split.c	/^__bam_pinsert(dbc, parent, lchild, rchild)$/
__bam_psplit	../btree/bt_split.c	/^__bam_psplit(dbc, cp, lp, rp, splitret)$/
__bam_read_root	../btree/bt_open.c	/^__bam_read_root(dbp)$/
__bam_repl_log	../btree/btree_auto.c	/^int __bam_repl_log(logp, txnid, ret_lsnp, flags,$/
__bam_repl_print	../btree/btree_auto.c	/^__bam_repl_print(notused1, dbtp, lsnp, notused2, n/
__bam_repl_read	../btree/btree_auto.c	/^__bam_repl_read(recbuf, argpp)$/
__bam_repl_recover	../btree/bt_rec.c	/^__bam_repl_recover(logp, dbtp, lsnp, redo, info)$/
__bam_ritem	../btree/bt_put.c	/^__bam_ritem(dbc, h, indx, data)$/
__bam_root	../btree/bt_split.c	/^__bam_root(dbc, cp)$/
__bam_rsearch	../btree/bt_rsearch.c	/^__bam_rsearch(dbc, recnop, flags, stop, exactp)$/
__bam_rsplit_log	../btree/btree_auto.c	/^int __bam_rsplit_log(logp, txnid, ret_lsnp, flags,/
__bam_rsplit_print	../btree/btree_auto.c	/^__bam_rsplit_print(notused1, dbtp, lsnp, notused2,/
__bam_rsplit_read	../btree/btree_auto.c	/^__bam_rsplit_read(recbuf, argpp)$/
__bam_rsplit_recover	../btree/bt_rec.c	/^__bam_rsplit_recover(logp, dbtp, lsnp, redo, info)/
__bam_search	../btree/bt_search.c	/^__bam_search(dbc, key, flags, stop, recnop, exactp/
__bam_setovflsize	../btree/bt_open.c	/^__bam_setovflsize(dbp)$/
__bam_split	../btree/bt_split.c	/^__bam_split(dbc, arg)$/
__bam_split_log	../btree/btree_auto.c	/^int __bam_split_log(logp, txnid, ret_lsnp, flags,$/
__bam_split_print	../btree/btree_auto.c	/^__bam_split_print(notused1, dbtp, lsnp, notused2, /
__bam_split_read	../btree/btree_auto.c	/^__bam_split_read(recbuf, argpp)$/
__bam_split_recover	../btree/bt_rec.c	/^__bam_split_recover(logp, dbtp, lsnp, redo, info)$/
__bam_stat	../btree/bt_stat.c	/^__bam_stat(dbp, spp, db_malloc, flags)$/
__bam_stkgrow	../btree/bt_search.c	/^__bam_stkgrow(cp)$/
__bam_stkrel	../btree/bt_search.c	/^__bam_stkrel(dbc, nolocks)$/
__bam_total	../btree/bt_rsearch.c	/^__bam_total(h)$/
__bhcmp	../mp/mp_sync.c	/^__bhcmp(p1, p2)$/
__bucket_to_page	../hash/hash_page.c	/^__bucket_to_page(hcp, n)$/
__build_data	../log/log_archive.c	/^__build_data(dblp, pref, listp, db_malloc)$/
__cmpfunc	../log/log_archive.c	/^__cmpfunc(p1, p2)$/
__db_add_recovery	../db/db_dispatch.c	/^__db_add_recovery(dbenv, func, ndx)$/
__db_addpage	../db/db_dup.c	/^__db_addpage(dbc, hp, indxp, newfunc)$/
__db_addpage_log	../db/db_auto.c	/^int __db_addpage_log(logp, txnid, ret_lsnp, flags,/
__db_addpage_print	../db/db_auto.c	/^__db_addpage_print(notused1, dbtp, lsnp, notused2,/
__db_addpage_read	../db/db_auto.c	/^__db_addpage_read(recbuf, argpp)$/
__db_addpage_recover	../db/db_rec.c	/^__db_addpage_recover(logp, dbtp, lsnp, redo, info)/
__db_addrem_log	../db/db_auto.c	/^int __db_addrem_log(logp, txnid, ret_lsnp, flags,$/
__db_addrem_print	../db/db_auto.c	/^__db_addrem_print(notused1, dbtp, lsnp, notused2, /
__db_addrem_read	../db/db_auto.c	/^__db_addrem_read(recbuf, argpp)$/
__db_addrem_recover	../db/db_rec.c	/^__db_addrem_recover(logp, dbtp, lsnp, redo, info)$/
__db_appname	../common/db_appinit.c	/^__db_appname(dbenv, appname, dir, file, tmp_oflags/
__db_apprec	../common/db_apprec.c	/^__db_apprec(dbenv, flags)$/
__db_big_log	../db/db_auto.c	/^int __db_big_log(logp, txnid, ret_lsnp, flags,$/
__db_big_print	../db/db_auto.c	/^__db_big_print(notused1, dbtp, lsnp, notused2, not/
__db_big_read	../db/db_auto.c	/^__db_big_read(recbuf, argpp)$/
__db_big_recover	../db/db_rec.c	/^__db_big_recover(logp, dbtp, lsnp, redo, info)$/
__db_byteorder	../common/db_byteorder.c	/^__db_byteorder(dbenv, lorder)$/
__db_c_close	../db/db_am.c	/^__db_c_close(dbc)$/
__db_c_destroy	../db/db_am.c	/^__db_c_destroy(dbc)$/
__db_cdelchk	../db/db_iface.c	/^__db_cdelchk(dbp, flags, isrdonly, isvalid)$/
__db_cgetchk	../db/db_iface.c	/^__db_cgetchk(dbp, key, data, flags, isvalid)$/
__db_close	../db/db.c	/^__db_close(dbp, flags)$/
__db_closechk	../db/db_iface.c	/^__db_closechk(dbp, flags)$/
__db_convert	../db/db_conv.c	/^__db_convert(pg, pp, pagesize, pgin)$/
__db_cprint	../db/db_am.c	/^__db_cprint(dbp)$/
__db_cputchk	../db/db_iface.c	/^__db_cputchk(dbp, key, data, flags, isrdonly, isva/
__db_cursor	../db/db_am.c	/^__db_cursor(dbp, txn, dbcp, flags)$/
__db_dbm_close	../dbm/dbm.c	/^__db_dbm_close()$/
__db_dbm_delete	../dbm/dbm.c	/^__db_dbm_delete(key)$/
__db_dbm_fetch	../dbm/dbm.c	/^__db_dbm_fetch(key)$/
__db_dbm_firstkey	../dbm/dbm.c	/^__db_dbm_firstkey()$/
__db_dbm_init	../dbm/dbm.c	/^__db_dbm_init(file)$/
__db_dbm_nextkey	../dbm/dbm.c	/^__db_dbm_nextkey(key)$/
__db_dbm_store	../dbm/dbm.c	/^__db_dbm_store(key, dat)$/
__db_ddup	../db/db_dup.c	/^__db_ddup(dbc, pgno, freefunc)$/
__db_debug_log	../db/db_auto.c	/^int __db_debug_log(logp, txnid, ret_lsnp, flags,$/
__db_debug_print	../db/db_auto.c	/^__db_debug_print(notused1, dbtp, lsnp, notused2, n/
__db_debug_read	../db/db_auto.c	/^__db_debug_read(recbuf, argpp)$/
__db_debug_recover	../db/db_rec.c	/^__db_debug_recover(logp, dbtp, lsnp, redo, info)$/
__db_delchk	../db/db_iface.c	/^__db_delchk(dbp, key, flags, isrdonly)$/
__db_dend	../db/db_dup.c	/^__db_dend(dbc, pgno, pp)$/
__db_ditem	../db/db_dup.c	/^__db_ditem(dbc, pagep, indx, nbytes)$/
__db_doff	../db/db_overflow.c	/^__db_doff(dbc, pgno, freefunc)$/
__db_dput	../db/db_dup.c	/^__db_dput(dbc, dbt, pp, indxp, newfunc)$/
__db_drem	../db/db_dup.c	/^__db_drem(dbc, pp, indx, freefunc)$/
__db_dsearch	../db/db_dup.c	/^__db_dsearch(dbc, is_insert, dbt, pgno, indxp, pp,/
__db_dsplit	../db/db_dup.c	/^__db_dsplit(dbc, hp, indxp, size, newfunc)$/
__db_dump	../db/db_pr.c	/^__db_dump(dbp, name, all)$/
__db_eopnotsup	../db/db_iface.c	/^__db_eopnotsup(dbenv)$/
__db_err	../common/db_err.c	/^__db_err(dbenv, fmt, va_alist)$/
__db_fcchk	../common/db_err.c	/^__db_fcchk(dbenv, name, flags, flag1, flag2)$/
__db_fchk	../common/db_err.c	/^__db_fchk(dbenv, name, flags, ok_flags)$/
__db_fd	../db/db_am.c	/^__db_fd(dbp, fdp)$/
__db_ferr	../common/db_err.c	/^__db_ferr(dbenv, name, iscombo)$/
__db_fileid_to_db	../log/log_rec.c	/^__db_fileid_to_db(logp, dbpp, ndx)$/
__db_get	../db/db_am.c	/^__db_get(dbp, txn, key, data, flags)$/
__db_getchk	../db/db_iface.c	/^__db_getchk(dbp, key, data, flags)$/
__db_goff	../db/db_overflow.c	/^__db_goff(dbp, dbt, tlen, pgno, bpp, bpsz)$/
__db_growregion	../common/db_region.c	/^__db_growregion(infop, increment)$/
__db_hashinit	../common/db_shash.c	/^__db_hashinit(begin, nelements)$/
__db_hcreate	../hsearch/hsearch.c	/^__db_hcreate(nel)$/
__db_hdestroy	../hsearch/hsearch.c	/^__db_hdestroy()$/
__db_home	../common/db_appinit.c	/^__db_home(dbenv, db_home, flags)$/
__db_hsearch	../hsearch/hsearch.c	/^__db_hsearch(item, action)$/
__db_init_print	../db/db_auto.c	/^__db_init_print(dbenv)$/
__db_init_recover	../db/db_auto.c	/^__db_init_recover(dbenv)$/
__db_init_wrapper	../db/db_am.c	/^__db_init_wrapper(dbp)$/
__db_isbad	../db/db_pr.c	/^__db_isbad(h, die)$/
__db_join	../db/db_join.c	/^__db_join(primary, curslist, flags, dbcp)$/
__db_join_close	../db/db_join.c	/^__db_join_close(dbc)$/
__db_join_del	../db/db_join.c	/^__db_join_del(dbc, flags)$/
__db_join_get	../db/db_join.c	/^__db_join_get(dbc, key, data, flags)$/
__db_join_put	../db/db_join.c	/^__db_join_put(dbc, key, data, flags)$/
__db_joinchk	../db/db_iface.c	/^__db_joinchk(dbp, flags)$/
__db_keyempty	../db/db_iface.c	/^__db_keyempty(dbenv)$/
__db_loadme	../db/db_pr.c	/^__db_loadme()$/
__db_log2	../common/db_log2.c	/^__db_log2(num)$/
__db_map_rmid	../xa/xa_map.c	/^__db_map_rmid(rmid, env)$/
__db_map_rmid_name	../xa/xa_map.c	/^__db_map_rmid_name(rmid, dbhome)$/
__db_map_xid	../xa/xa_map.c	/^__db_map_xid(env, xid, off)$/
__db_mapanon_ok	../os/os_map.c	/^__db_mapanon_ok(need_names)$/
__db_mapfile	../os/os_map.c	/^__db_mapfile(path, fd, len, is_rdonly, addr)$/
__db_mapinit	../os/os_map.c	/^__db_mapinit()$/
__db_mapregion	../os/os_map.c	/^__db_mapregion(path, infop)$/
__db_moff	../db/db_overflow.c	/^__db_moff(dbp, dbt, pgno, tlen, cmpfunc, cmpp)$/
__db_mutex_init	../mutex/mutex.c	/^__db_mutex_init(mp, off)$/
__db_mutex_lock	../mutex/mutex.c	/^__db_mutex_lock(mp, fd)$/
__db_mutex_unlock	../mutex/mutex.c	/^__db_mutex_unlock(mp, fd)$/
__db_ndbm_clearerr	../dbm/dbm.c	/^__db_ndbm_clearerr(dbm)$/
__db_ndbm_close	../dbm/dbm.c	/^__db_ndbm_close(dbm)$/
__db_ndbm_delete	../dbm/dbm.c	/^__db_ndbm_delete(dbm, key)$/
__db_ndbm_dirfno	../dbm/dbm.c	/^__db_ndbm_dirfno(dbm)$/
__db_ndbm_error	../dbm/dbm.c	/^__db_ndbm_error(dbm)$/
__db_ndbm_fetch	../dbm/dbm.c	/^__db_ndbm_fetch(dbm, key)$/
__db_ndbm_firstkey	../dbm/dbm.c	/^__db_ndbm_firstkey(dbm)$/
__db_ndbm_nextkey	../dbm/dbm.c	/^__db_ndbm_nextkey(dbm)$/
__db_ndbm_open	../dbm/dbm.c	/^__db_ndbm_open(file, oflags, mode)$/
__db_ndbm_pagfno	../dbm/dbm.c	/^__db_ndbm_pagfno(dbm)$/
__db_ndbm_rdonly	../dbm/dbm.c	/^__db_ndbm_rdonly(dbm)$/
__db_ndbm_store	../dbm/dbm.c	/^__db_ndbm_store(dbm, key, data, flags)$/
__db_no_open	../dbm/dbm.c	/^__db_no_open()$/
__db_oflags	../os/os_oflags.c	/^__db_oflags(oflags)$/
__db_omode	../os/os_oflags.c	/^__db_omode(perm)$/
__db_open	../os/os_open.c	/^__db_open(name, arg_flags, ok_flags, mode, fdp)$/
__db_ovref	../db/db_overflow.c	/^__db_ovref(dbc, pgno, adjust)$/
__db_ovref_log	../db/db_auto.c	/^int __db_ovref_log(logp, txnid, ret_lsnp, flags,$/
__db_ovref_print	../db/db_auto.c	/^__db_ovref_print(notused1, dbtp, lsnp, notused2, n/
__db_ovref_read	../db/db_auto.c	/^__db_ovref_read(recbuf, argpp)$/
__db_ovref_recover	../db/db_rec.c	/^__db_ovref_recover(logp, dbtp, lsnp, redo, info)$/
__db_panic	../common/db_err.c	/^__db_panic(dbenv, errval)$/
__db_pgerr	../common/db_err.c	/^__db_pgerr(dbp, pgno)$/
__db_pgfmt	../common/db_err.c	/^__db_pgfmt(dbp, pgno)$/
__db_pgin	../db/db_conv.c	/^__db_pgin(pg, pagesize, pp)$/
__db_pgout	../db/db_conv.c	/^__db_pgout(pg, pagesize, pp)$/
__db_pitem	../db/db_dup.c	/^__db_pitem(dbc, pagep, indx, nbytes, hdr, data)$/
__db_poff	../db/db_overflow.c	/^__db_poff(dbc, dbt, pgnop, newfunc)$/
__db_pr	../db/db_pr.c	/^__db_pr(p, len)$/
__db_prbtree	../db/db_pr.c	/^__db_prbtree(dbp)$/
__db_prdb	../db/db_pr.c	/^__db_prdb(dbp)$/
__db_prdbt	../db/db_pr.c	/^__db_prdbt(dbtp, checkprint, fp)$/
__db_prflags	../db/db_pr.c	/^__db_prflags(flags, fn, fp)$/
__db_prhash	../db/db_pr.c	/^__db_prhash(dbp)$/
__db_prinit	../db/db_pr.c	/^__db_prinit(fp)$/
__db_prnpage	../db/db_pr.c	/^__db_prnpage(mpf, pgno)$/
__db_proff	../db/db_pr.c	/^__db_proff(vp)$/
__db_prpage	../db/db_pr.c	/^__db_prpage(h, all)$/
__db_prtree	../db/db_pr.c	/^__db_prtree(mpf, all)$/
__db_psize	../db/db_pr.c	/^__db_psize(mpf)$/
__db_put	../db/db_am.c	/^__db_put(dbp, txn, key, data, flags)$/
__db_putchk	../db/db_iface.c	/^__db_putchk(dbp, key, data, flags, isrdonly, isdup/
__db_rattach	../common/db_region.c	/^__db_rattach(infop)$/
__db_rdetach	../common/db_region.c	/^__db_rdetach(infop)$/
__db_rdonly	../db/db_iface.c	/^__db_rdonly(dbenv, name)$/
__db_relink	../db/db_dup.c	/^__db_relink(dbc, add_rem, pagep, new_next, needloc/
__db_relink_log	../db/db_auto.c	/^int __db_relink_log(logp, txnid, ret_lsnp, flags,$/
__db_relink_print	../db/db_auto.c	/^__db_relink_print(notused1, dbtp, lsnp, notused2, /
__db_relink_read	../db/db_auto.c	/^__db_relink_read(recbuf, argpp)$/
__db_relink_recover	../db/db_rec.c	/^__db_relink_recover(logp, dbtp, lsnp, redo, info)$/
__db_ret	../db/db_ret.c	/^__db_ret(dbp, h, indx, dbt, memp, memsize)$/
__db_retcopy	../db/db_ret.c	/^__db_retcopy(dbt, data, len, memp, memsize, db_mal/
__db_rgrow	../common/db_region.c	/^__db_rgrow(infop, new_size)$/
__db_rmid_to_env	../xa/xa_map.c	/^__db_rmid_to_env(rmid, envp, open_ok)$/
__db_rmid_to_name	../xa/xa_map.c	/^__db_rmid_to_name(rmid, dbhomep)$/
__db_rpath	../os/os_rpath.c	/^__db_rpath(path)$/
__db_rreattach	../common/db_region.c	/^__db_rreattach(infop, new_size)$/
__db_runlink	../common/db_region.c	/^__db_runlink(infop, force)$/
__db_shalloc	../common/db_salloc.c	/^__db_shalloc(p, len, align, retp)$/
__db_shalloc_count	../common/db_salloc.c	/^__db_shalloc_count(addr)$/
__db_shalloc_dump	../common/db_salloc.c	/^__db_shalloc_dump(addr, fp)$/
__db_shalloc_free	../common/db_salloc.c	/^__db_shalloc_free(regionp, ptr)$/
__db_shalloc_init	../common/db_salloc.c	/^__db_shalloc_init(area, size)$/
__db_shsizeof	../common/db_salloc.c	/^__db_shsizeof(ptr)$/
__db_split_log	../db/db_auto.c	/^int __db_split_log(logp, txnid, ret_lsnp, flags,$/
__db_split_print	../db/db_auto.c	/^__db_split_print(notused1, dbtp, lsnp, notused2, n/
__db_split_read	../db/db_auto.c	/^__db_split_read(recbuf, argpp)$/
__db_split_recover	../db/db_rec.c	/^__db_split_recover(logp, dbtp, lsnp, redo, info)$/
__db_statchk	../db/db_iface.c	/^__db_statchk(dbp, flags)$/
__db_sync	../db/db_am.c	/^__db_sync(dbp, flags)$/
__db_syncchk	../db/db_iface.c	/^__db_syncchk(dbp, flags)$/
__db_tablesize	../common/db_shash.c	/^__db_tablesize(n_buckets)$/
__db_txnlist_add	../db/db_dispatch.c	/^__db_txnlist_add(listp, txnid)$/
__db_txnlist_end	../db/db_dispatch.c	/^__db_txnlist_end(listp)$/
__db_txnlist_find	../db/db_dispatch.c	/^__db_txnlist_find(listp, txnid)$/
__db_txnlist_gen	../db/db_dispatch.c	/^__db_txnlist_gen(listp, incr)$/
__db_txnlist_init	../db/db_dispatch.c	/^__db_txnlist_init(retp)$/
__db_txnlist_print	../db/db_dispatch.c	/^__db_txnlist_print(listp)$/
__db_unlinkregion	../os/os_map.c	/^__db_unlinkregion(name, infop)$/
__db_unmap_rmid	../xa/xa_map.c	/^__db_unmap_rmid(rmid)$/
__db_unmap_rmid_name	../xa/xa_map.c	/^__db_unmap_rmid_name(rmid)$/
__db_unmap_xid	../xa/xa_map.c	/^__db_unmap_xid(env, xid, off)$/
__db_unmapfile	../os/os_map.c	/^__db_unmapfile(addr, len)$/
__db_unmapregion	../os/os_map.c	/^__db_unmapregion(infop)$/
__db_xa_close	../xa/xa.c	/^__db_xa_close(xa_info, rmid, flags)$/
__db_xa_commit	../xa/xa.c	/^__db_xa_commit(xid, rmid, flags)$/
__db_xa_complete	../xa/xa.c	/^__db_xa_complete(handle, retval, rmid, flags)$/
__db_xa_end	../xa/xa.c	/^__db_xa_end(xid, rmid, flags)$/
__db_xa_forget	../xa/xa.c	/^__db_xa_forget(xid, rmid, flags)$/
__db_xa_open	../xa/xa.c	/^__db_xa_open(xa_info, rmid, flags)$/
__db_xa_prepare	../xa/xa.c	/^__db_xa_prepare(xid, rmid, flags)$/
__db_xa_recover	../xa/xa.c	/^__db_xa_recover(xids, count, rmid, flags)$/
__db_xa_rollback	../xa/xa.c	/^__db_xa_rollback(xid, rmid, flags)$/
__db_xa_start	../xa/xa.c	/^__db_xa_start(xid, rmid, flags)$/
__db_xid_to_txn	../xa/xa_map.c	/^__db_xid_to_txn(dbenv, xid, offp)$/
__dbt_ferr	../db/db_iface.c	/^__dbt_ferr(dbp, name, dbt, check_thread)$/
__dd_abort	../lock/lock_deadlock.c	/^__dd_abort(dbenv, info)$/
__dd_build	../lock/lock_deadlock.c	/^__dd_build(dbenv, bmp, nlockers, idmap)$/
__dd_debug	../lock/lock_deadlock.c	/^__dd_debug(dbenv, idmap, bitmap, nlockers)$/
__dd_find	../lock/lock_deadlock.c	/^__dd_find(bmp, idmap, nlockers)$/
__ham_add_dup	../hash/hash_dup.c	/^__ham_add_dup(dbc, nval, flags)$/
__ham_add_el	../hash/hash_page.c	/^__ham_add_el(dbc, key, val, type)$/
__ham_add_ovflpage	../hash/hash_page.c	/^__ham_add_ovflpage(dbc, pagep, release, pp)$/
__ham_c_close	../hash/hash.c	/^__ham_c_close(dbc)$/
__ham_c_del	../hash/hash.c	/^__ham_c_del(dbc, flags)$/
__ham_c_destroy	../hash/hash.c	/^__ham_c_destroy(dbc)$/
__ham_c_get	../hash/hash.c	/^__ham_c_get(dbc, key, data, flags)$/
__ham_c_init	../hash/hash.c	/^__ham_c_init(dbc)$/
__ham_c_put	../hash/hash.c	/^__ham_c_put(dbc, key, data, flags)$/
__ham_c_update	../hash/hash.c	/^__ham_c_update(hcp, chg_pgno, len, add, is_dup)$/
__ham_call_hash	../hash/hash.c	/^__ham_call_hash(hcp, k, len)$/
__ham_check_move	../hash/hash_dup.c	/^__ham_check_move(dbc, add_len)$/
__ham_close	../hash/hash.c	/^__ham_close(dbp)$/
__ham_copy_item	../hash/hash_page.c	/^__ham_copy_item(pgsize, src_page, src_ndx, dest_pa/
__ham_copypage_log	../hash/hash_auto.c	/^int __ham_copypage_log(logp, txnid, ret_lsnp, flag/
__ham_copypage_print	../hash/hash_auto.c	/^__ham_copypage_print(notused1, dbtp, lsnp, notused/
__ham_copypage_read	../hash/hash_auto.c	/^__ham_copypage_read(recbuf, argpp)$/
__ham_copypage_recover	../hash/hash_rec.c	/^__ham_copypage_recover(logp, dbtp, lsnp, redo, inf/
__ham_del_page	../hash/hash_page.c	/^__ham_del_page(dbc, pagep)$/
__ham_del_pair	../hash/hash_page.c	/^__ham_del_pair(dbc, reclaim_page)$/
__ham_delete	../hash/hash.c	/^__ham_delete(dbp, txn, key, flags)$/
__ham_dirty_page	../hash/hash_page.c	/^__ham_dirty_page(dbp, pagep)$/
__ham_dpair	../hash/hash_page.c	/^__ham_dpair(dbp, p, pndx)$/
__ham_dsearch	../hash/hash_dup.c	/^__ham_dsearch(dbc, dbt, offp, cmpp)$/
__ham_dup_convert	../hash/hash_dup.c	/^__ham_dup_convert(dbc)$/
__ham_dup_return	../hash/hash.c	/^__ham_dup_return(dbc, val, flags)$/
__ham_expand_table	../hash/hash.c	/^__ham_expand_table(dbc)$/
__ham_func2	../hash/hash_func.c	/^__ham_func2(key, len)$/
__ham_func3	../hash/hash_func.c	/^__ham_func3(key, len)$/
__ham_func4	../hash/hash_func.c	/^__ham_func4(key, len)$/
__ham_func5	../hash/hash_func.c	/^__ham_func5(key, len)$/
__ham_get_cpage	../hash/hash_page.c	/^__ham_get_cpage(dbc, mode)$/
__ham_get_page	../hash/hash_page.c	/^__ham_get_page(dbp, addr, pagep)$/
__ham_init_dbt	../hash/hash.c	/^__ham_init_dbt(dbt, size, bufp, sizep)$/
__ham_init_htab	../hash/hash.c	/^__ham_init_htab(dbc, nelem, ffactor)$/
__ham_init_ovflpages	../hash/hash_page.c	/^__ham_init_ovflpages(dbc)$/
__ham_init_print	../hash/hash_auto.c	/^__ham_init_print(dbenv)$/
__ham_init_recover	../hash/hash_auto.c	/^__ham_init_recover(dbenv)$/
__ham_insdel_log	../hash/hash_auto.c	/^int __ham_insdel_log(logp, txnid, ret_lsnp, flags,/
__ham_insdel_print	../hash/hash_auto.c	/^__ham_insdel_print(notused1, dbtp, lsnp, notused2,/
__ham_insdel_read	../hash/hash_auto.c	/^__ham_insdel_read(recbuf, argpp)$/
__ham_insdel_recover	../hash/hash_rec.c	/^__ham_insdel_recover(logp, dbtp, lsnp, redo, info)/
__ham_item	../hash/hash_page.c	/^__ham_item(dbc, mode)$/
__ham_item_done	../hash/hash_page.c	/^__ham_item_done(dbc, dirty)$/
__ham_item_first	../hash/hash_page.c	/^__ham_item_first(dbc, mode)$/
__ham_item_init	../hash/hash_page.c	/^__ham_item_init(hcp)$/
__ham_item_last	../hash/hash_page.c	/^__ham_item_last(dbc, mode)$/
__ham_item_next	../hash/hash_page.c	/^__ham_item_next(dbc, mode)$/
__ham_item_prev	../hash/hash_page.c	/^__ham_item_prev(dbc, mode)$/
__ham_item_reset	../hash/hash_page.c	/^__ham_item_reset(dbc)$/
__ham_lock_bucket	../hash/hash_page.c	/^__ham_lock_bucket(dbc, mode)$/
__ham_lookup	../hash/hash.c	/^__ham_lookup(dbc, key, sought, mode)$/
__ham_make_dup	../hash/hash_dup.c	/^__ham_make_dup(notdup, duplicate, bufp, sizep)$/
__ham_move_offpage	../hash/hash_dup.c	/^__ham_move_offpage(dbc, pagep, ndx, pgno)$/
__ham_mswap	../hash/hash_conv.c	/^__ham_mswap(pg)$/
__ham_new_page	../hash/hash_page.c	/^__ham_new_page(dbp, addr, type, pp)$/
__ham_newpage_log	../hash/hash_auto.c	/^int __ham_newpage_log(logp, txnid, ret_lsnp, flags/
__ham_newpage_print	../hash/hash_auto.c	/^__ham_newpage_print(notused1, dbtp, lsnp, notused2/
__ham_newpage_read	../hash/hash_auto.c	/^__ham_newpage_read(recbuf, argpp)$/
__ham_newpage_recover	../hash/hash_rec.c	/^__ham_newpage_recover(logp, dbtp, lsnp, redo, info/
__ham_newpgno_log	../hash/hash_auto.c	/^int __ham_newpgno_log(logp, txnid, ret_lsnp, flags/
__ham_newpgno_print	../hash/hash_auto.c	/^__ham_newpgno_print(notused1, dbtp, lsnp, notused2/
__ham_newpgno_read	../hash/hash_auto.c	/^__ham_newpgno_read(recbuf, argpp)$/
__ham_newpgno_recover	../hash/hash_rec.c	/^__ham_newpgno_recover(logp, dbtp, lsnp, redo, info/
__ham_next_cpage	../hash/hash_page.c	/^__ham_next_cpage(dbc, pgno, dirty, flags)$/
__ham_onpage_replace	../hash/hash_page.c	/^__ham_onpage_replace(pagep, pgsize, ndx, off, chan/
__ham_open	../hash/hash.c	/^__ham_open(dbp, dbinfo)$/
__ham_overflow_page	../hash/hash_page.c	/^__ham_overflow_page(dbc, type, pp)$/
__ham_overwrite	../hash/hash.c	/^__ham_overwrite(dbc, nval)$/
__ham_ovfl_log	../hash/hash_auto.c	/^int __ham_ovfl_log(logp, txnid, ret_lsnp, flags,$/
__ham_ovfl_print	../hash/hash_auto.c	/^__ham_ovfl_print(notused1, dbtp, lsnp, notused2, n/
__ham_ovfl_read	../hash/hash_auto.c	/^__ham_ovfl_read(recbuf, argpp)$/
__ham_ovfl_recover	../hash/hash_rec.c	/^__ham_ovfl_recover(logp, dbtp, lsnp, redo, info)$/
__ham_pgin	../hash/hash_conv.c	/^__ham_pgin(pg, pp, cookie)$/
__ham_pgout	../hash/hash_conv.c	/^__ham_pgout(pg, pp, cookie)$/
__ham_put_page	../hash/hash_page.c	/^__ham_put_page(dbp, pagep, is_dirty)$/
__ham_putitem	../hash/hash_page.c	/^__ham_putitem(p, dbt, type)$/
__ham_replace_log	../hash/hash_auto.c	/^int __ham_replace_log(logp, txnid, ret_lsnp, flags/
__ham_replace_print	../hash/hash_auto.c	/^__ham_replace_print(notused1, dbtp, lsnp, notused2/
__ham_replace_read	../hash/hash_auto.c	/^__ham_replace_read(recbuf, argpp)$/
__ham_replace_recover	../hash/hash_rec.c	/^__ham_replace_recover(logp, dbtp, lsnp, redo, info/
__ham_replpair	../hash/hash_page.c	/^__ham_replpair(dbc, dbt, make_dup)$/
__ham_reputpair	../hash/hash_page.c	/^__ham_reputpair(p, psize, ndx, key, data)$/
__ham_split_page	../hash/hash_page.c	/^__ham_split_page(dbc, obucket, nbucket)$/
__ham_splitdata_log	../hash/hash_auto.c	/^int __ham_splitdata_log(logp, txnid, ret_lsnp, fla/
__ham_splitdata_print	../hash/hash_auto.c	/^__ham_splitdata_print(notused1, dbtp, lsnp, notuse/
__ham_splitdata_read	../hash/hash_auto.c	/^__ham_splitdata_read(recbuf, argpp)$/
__ham_splitdata_recover	../hash/hash_rec.c	/^__ham_splitdata_recover(logp, dbtp, lsnp, redo, in/
__ham_splitmeta_log	../hash/hash_auto.c	/^int __ham_splitmeta_log(logp, txnid, ret_lsnp, fla/
__ham_splitmeta_print	../hash/hash_auto.c	/^__ham_splitmeta_print(notused1, dbtp, lsnp, notuse/
__ham_splitmeta_read	../hash/hash_auto.c	/^__ham_splitmeta_read(recbuf, argpp)$/
__ham_splitmeta_recover	../hash/hash_rec.c	/^__ham_splitmeta_recover(logp, dbtp, lsnp, redo, in/
__ham_stat	../hash/hash_stat.c	/^__ham_stat(dbp, spp, db_malloc, flags)$/
__lock_checklocker	../lock/lock.c	/^__lock_checklocker(lt, lockp, do_remove)$/
__lock_cmp	../lock/lock_util.c	/^__lock_cmp(dbt, lock_obj)$/
__lock_count_locks	../lock/lock_region.c	/^__lock_count_locks(lrp)$/
__lock_count_objs	../lock/lock_region.c	/^__lock_count_objs(lrp)$/
__lock_downgrade	../lock/lock.c	/^__lock_downgrade(lt, lock, new_mode, flags)$/
__lock_dump_locker	../lock/lock_region.c	/^__lock_dump_locker(lt, op, fp)$/
__lock_dump_object	../lock/lock_region.c	/^__lock_dump_object(lt, op, fp)$/
__lock_dump_region	../lock/lock_region.c	/^__lock_dump_region(lt, area, fp)$/
__lock_dump_status	../lock/lock_region.c	/^__lock_dump_status(status)$/
__lock_freeobj	../lock/lock.c	/^__lock_freeobj(lt, obj)$/
__lock_get_internal	../lock/lock.c	/^__lock_get_internal(lt, locker, txn, flags, obj, l/
__lock_getobj	../lock/lock.c	/^__lock_getobj(lt, locker, dbt, type, objp)$/
__lock_grow_region	../lock/lock_region.c	/^__lock_grow_region(lt, which, howmuch)$/
__lock_is_locked	../lock/lock.c	/^__lock_is_locked(lt, locker, dbt, mode)$/
__lock_is_parent	../lock/lock.c	/^__lock_is_parent(locker, txn)$/
__lock_lhash	../lock/lock_util.c	/^__lock_lhash(lock_obj)$/
__lock_locker_cmp	../lock/lock_util.c	/^__lock_locker_cmp(locker, lock_obj)$/
__lock_locker_hash	../lock/lock_util.c	/^__lock_locker_hash(locker)$/
__lock_ohash	../lock/lock_util.c	/^__lock_ohash(dbt)$/
__lock_panic	../lock/lock_region.c	/^__lock_panic(dbenv)$/
__lock_printlock	../lock/lock.c	/^__lock_printlock(lt, lp, ispgno)$/
__lock_promote	../lock/lock.c	/^__lock_promote(lt, obj)$/
__lock_put_internal	../lock/lock.c	/^__lock_put_internal(lt, lockp, do_all)$/
__lock_remove_waiter	../lock/lock.c	/^__lock_remove_waiter(lt, sh_obj, lockp, status)$/
__lock_reset_region	../lock/lock_region.c	/^__lock_reset_region(lt)$/
__lock_tabinit	../lock/lock_region.c	/^__lock_tabinit(dbenv, lrp)$/
__lock_validate_region	../lock/lock_region.c	/^__lock_validate_region(lt)$/
__lock_vec_internal	../lock/lock.c	/^__lock_vec_internal(lt, locker, txn, flags, list, /
__log_add_logid	../log/log_rec.c	/^__log_add_logid(logp, dbp, ndx)$/
__log_close_files	../log/log_rec.c	/^__log_close_files(logp)$/
__log_do_open	../log/log_rec.c	/^__log_do_open(lp, uid, name, ftype, ndx)$/
__log_fill	../log/log_put.c	/^__log_fill(dblp, lsn, addr, len)$/
__log_find	../log/log.c	/^__log_find(dblp, find_first, valp)$/
__log_findckp	../log/log_findckp.c	/^__log_findckp(lp, lsnp)$/
__log_flush	../log/log_put.c	/^__log_flush(dblp, lsn)$/
__log_get	../log/log_get.c	/^__log_get(dblp, alsn, dbt, flags, silent)$/
__log_init_print	../log/log_auto.c	/^__log_init_print(dbenv)$/
__log_init_recover	../log/log_auto.c	/^__log_init_recover(dbenv)$/
__log_lid_to_fname	../log/log_rec.c	/^__log_lid_to_fname(dblp, lid, fnamep)$/
__log_name	../log/log_put.c	/^__log_name(dblp, filenumber, namep, fdp, flags)$/
__log_newfd	../log/log_put.c	/^__log_newfd(dblp)$/
__log_open_file	../log/log_rec.c	/^__log_open_file(lp, argp)$/
__log_panic	../log/log.c	/^__log_panic(dbenv)$/
__log_put	../log/log_put.c	/^__log_put(dblp, lsn, dbt, flags)$/
__log_putr	../log/log_put.c	/^__log_putr(dblp, lsn, dbt, prev)$/
__log_recover	../log/log.c	/^__log_recover(dblp)$/
__log_register_log	../log/log_auto.c	/^int __log_register_log(logp, txnid, ret_lsnp, flag/
__log_register_print	../log/log_auto.c	/^__log_register_print(notused1, dbtp, lsnp, notused/
__log_register_read	../log/log_auto.c	/^__log_register_read(recbuf, argpp)$/
__log_register_recover	../log/log_rec.c	/^__log_register_recover(logp, dbtp, lsnp, redo, inf/
__log_rem_logid	../log/log_rec.c	/^__log_rem_logid(logp, ndx)$/
__log_valid	../log/log.c	/^__log_valid(dblp, number, set_persist)$/
__log_write	../log/log_put.c	/^__log_write(dblp, addr, len)$/
__memp_alloc	../mp/mp_region.c	/^__memp_alloc(dbmp, len, offsetp, retp)$/
__memp_bhfree	../mp/mp_bh.c	/^__memp_bhfree(dbmp, mfp, bhp, free_mem)$/
__memp_bhwrite	../mp/mp_bh.c	/^__memp_bhwrite(dbmp, mfp, bhp, restartp, wrotep)$/
__memp_dump_region	../mp/mp_pr.c	/^__memp_dump_region(dbmp, area, fp)$/
__memp_fn	../mp/mp_pr.c	/^__memp_fn(dbmfp)$/
__memp_fns	../mp/mp_pr.c	/^__memp_fns(dbmp, mfp)$/
__memp_fopen	../mp/mp_fopen.c	/^__memp_fopen(dbmp, mfp, path, flags, mode, pagesiz/
__memp_fsync	../mp/mp_sync.c	/^__memp_fsync(dbmfp)$/
__memp_mf_close	../mp/mp_fopen.c	/^__memp_mf_close(dbmp, dbmfp)$/
__memp_mf_open	../mp/mp_fopen.c	/^__memp_mf_open(dbmp, path, pagesize, last_pgno, fi/
__memp_panic	../mp/mp_open.c	/^__memp_panic(dbenv)$/
__memp_pbh	../mp/mp_pr.c	/^__memp_pbh(dbmp, bhp, fmap, fp)$/
__memp_pg	../mp/mp_bh.c	/^__memp_pg(dbmfp, bhp, is_pgin)$/
__memp_pgread	../mp/mp_bh.c	/^__memp_pgread(dbmfp, bhp, can_create)$/
__memp_pgwrite	../mp/mp_bh.c	/^__memp_pgwrite(dbmfp, bhp, restartp, wrotep)$/
__memp_reg_alloc	../mp/mp_region.c	/^__memp_reg_alloc(dbmp, len, offsetp, retp)$/
__memp_ropen	../mp/mp_region.c	/^__memp_ropen(dbmp, path, cachesize, mode, is_priva/
__memp_upgrade	../mp/mp_bh.c	/^__memp_upgrade(dbmp, dbmfp, mfp)$/
__mp_xxx_fd	../mp/mp_sync.c	/^__mp_xxx_fd(dbmfp, fdp)$/
__mpe_fsync	../os/os_fsync.c	/^__mpe_fsync(fd)$/
__os_abspath	../os/os_abs.c	/^__os_abspath(path)$/
__os_calloc	../os/os_alloc.c	/^__os_calloc(num, size, storep)$/
__os_close	../os/os_open.c	/^__os_close(fd)$/
__os_dirfree	../os/os_dir.c	/^__os_dirfree(names, cnt)$/
__os_dirlist	../os/os_dir.c	/^__os_dirlist(dir, namesp, cntp)$/
__os_exists	../os/os_stat.c	/^__os_exists(path, isdirp)$/
__os_fileid	../os/os_fid.c	/^__os_fileid(dbenv, fname, timestamp, fidp)$/
__os_free	../os/os_alloc.c	/^__os_free(ptr, size)$/
__os_freestr	../os/os_alloc.c	/^__os_freestr(ptr)$/
__os_fsync	../os/os_fsync.c	/^__os_fsync(fd)$/
__os_io	../os/os_rw.c	/^__os_io(db_iop, op, niop)$/
__os_ioinfo	../os/os_stat.c	/^__os_ioinfo(path, fd, mbytesp, bytesp, iosizep)$/
__os_malloc	../os/os_alloc.c	/^__os_malloc(size, db_malloc, storep)$/
__os_map	../os/os_map.c	/^__os_map(path, fd, len, is_region, is_anonymous, i/
__os_open	../os/os_open.c	/^__os_open(name, flags, mode, fdp)$/
__os_pstat_getdynamic	../os/os_spin.c	/^__os_pstat_getdynamic()$/
__os_read	../os/os_rw.c	/^__os_read(fd, addr, len, nrp)$/
__os_realloc	../os/os_alloc.c	/^__os_realloc(storep, size)$/
__os_seek	../os/os_seek.c	/^__os_seek(fd, pgsize, pageno, relative, isrewind, /
__os_shmget	../os/os_map.c	/^__os_shmget(infop)$/
__os_sleep	../os/os_sleep.c	/^__os_sleep(secs, usecs)$/
__os_spin	../os/os_spin.c	/^__os_spin()$/
__os_strdup	../os/os_alloc.c	/^__os_strdup(str, storep)$/
__os_sysconf	../os/os_spin.c	/^__os_sysconf()$/
__os_tmpdir	../os/os_tmpdir.c	/^__os_tmpdir(dbenv, flags)$/
__os_unlink	../os/os_unlink.c	/^__os_unlink(path)$/
__os_write	../os/os_rw.c	/^__os_write(fd, addr, len, nwp)$/
__os_yield	../os/os_spin.c	/^__os_yield(usecs)$/
__ram_add	../btree/bt_recno.c	/^__ram_add(dbc, recnop, data, flags, bi_flags)$/
__ram_c_del	../btree/bt_recno.c	/^__ram_c_del(dbc, flags)$/
__ram_c_get	../btree/bt_recno.c	/^__ram_c_get(dbc, key, data, flags)$/
__ram_c_put	../btree/bt_recno.c	/^__ram_c_put(dbc, key, data, flags)$/
__ram_ca	../btree/bt_recno.c	/^__ram_ca(dbp, recno, op)$/
__ram_close	../btree/bt_recno.c	/^__ram_close(dbp)$/
__ram_delete	../btree/bt_recno.c	/^__ram_delete(dbp, txn, key, flags)$/
__ram_fmap	../btree/bt_recno.c	/^__ram_fmap(dbc, top)$/
__ram_getno	../btree/bt_recno.c	/^__ram_getno(dbc, key, rep, can_create)$/
__ram_i_delete	../btree/bt_recno.c	/^__ram_i_delete(dbc)$/
__ram_open	../btree/bt_recno.c	/^__ram_open(dbp, dbinfo)$/
__ram_put	../btree/bt_recno.c	/^__ram_put(dbp, txn, key, data, flags)$/
__ram_root	../btree/bt_split.c	/^__ram_root(dbc, rootp, lp, rp)$/
__ram_source	../btree/bt_recno.c	/^__ram_source(dbp, rp, fname)$/
__ram_sync	../btree/bt_recno.c	/^__ram_sync(dbp, flags)$/
__ram_update	../btree/bt_recno.c	/^__ram_update(dbc, recno, can_create)$/
__ram_vmap	../btree/bt_recno.c	/^__ram_vmap(dbc, top)$/
__ram_writeback	../btree/bt_recno.c	/^__ram_writeback(dbc)$/
__txn_begin	../txn/txn.c	/^__txn_begin(txn)$/
__txn_check_running	../txn/txn.c	/^__txn_check_running(txnp, tdp)$/
__txn_child_log	../txn/txn_auto.c	/^int __txn_child_log(logp, txnid, ret_lsnp, flags,$/
__txn_child_print	../txn/txn_auto.c	/^__txn_child_print(notused1, dbtp, lsnp, notused2, /
__txn_child_read	../txn/txn_auto.c	/^__txn_child_read(recbuf, argpp)$/
__txn_child_recover	../txn/txn_rec.c	/^__txn_child_recover(logp, dbtp, lsnp, redo, info)$/
__txn_ckp_log	../txn/txn_auto.c	/^int __txn_ckp_log(logp, txnid, ret_lsnp, flags,$/
__txn_ckp_print	../txn/txn_auto.c	/^__txn_ckp_print(notused1, dbtp, lsnp, notused2, no/
__txn_ckp_read	../txn/txn_auto.c	/^__txn_ckp_read(recbuf, argpp)$/
__txn_ckp_recover	../txn/txn_rec.c	/^__txn_ckp_recover(logp, dbtp, lsnp, redo, info)$/
__txn_end	../txn/txn.c	/^__txn_end(txnp, is_commit)$/
__txn_freekids	../txn/txn.c	/^__txn_freekids(txnp)$/
__txn_grow_region	../txn/txn.c	/^__txn_grow_region(tp)$/
__txn_init	../txn/txn.c	/^__txn_init(txn_region)$/
__txn_init_print	../txn/txn_auto.c	/^__txn_init_print(dbenv)$/
__txn_init_recover	../txn/txn_auto.c	/^__txn_init_recover(dbenv)$/
__txn_is_ancestor	../txn/txn.c	/^__txn_is_ancestor(mgr, hold_off, req_off)$/
__txn_panic	../txn/txn.c	/^__txn_panic(dbenv)$/
__txn_regop_log	../txn/txn_auto.c	/^int __txn_regop_log(logp, txnid, ret_lsnp, flags,$/
__txn_regop_print	../txn/txn_auto.c	/^__txn_regop_print(notused1, dbtp, lsnp, notused2, /
__txn_regop_read	../txn/txn_auto.c	/^__txn_regop_read(recbuf, argpp)$/
__txn_regop_recover	../txn/txn_rec.c	/^__txn_regop_recover(logp, dbtp, lsnp, redo, info)$/
__txn_restore_txn	../txn/txn_rec.c	/^__txn_restore_txn(dbenv, lsnp, argp)$/
__txn_undo	../txn/txn.c	/^__txn_undo(txnp)$/
__txn_validate_region	../txn/txn.c	/^__txn_validate_region(tp)$/
__txn_xa_begin	../txn/txn.c	/^__txn_xa_begin(dbenv, txn)$/
__txn_xa_regop_log	../txn/txn_auto.c	/^int __txn_xa_regop_log(logp, txnid, ret_lsnp, flag/
__txn_xa_regop_print	../txn/txn_auto.c	/^__txn_xa_regop_print(notused1, dbtp, lsnp, notused/
__txn_xa_regop_read	../txn/txn_auto.c	/^__txn_xa_regop_read(recbuf, argpp)$/
__txn_xa_regop_recover	../txn/txn_rec.c	/^__txn_xa_regop_recover(logp, dbtp, lsnp, redo, inf/
__usermem	../log/log_archive.c	/^__usermem(listp, db_malloc)$/
__xa_c_close	../xa/xa_db.c	/^__xa_c_close(dbc)$/
__xa_c_del	../xa/xa_db.c	/^__xa_c_del(dbc, flags)$/
__xa_c_get	../xa/xa_db.c	/^__xa_c_get(dbc, key, data, flags)$/
__xa_c_put	../xa/xa_db.c	/^__xa_c_put(dbc, key, data, flags)$/
__xa_close	../xa/xa_db.c	/^__xa_close(dbp, flags)$/
__xa_cursor	../xa/xa_db.c	/^__xa_cursor(dbp, txn, dbcp, flags)$/
__xa_del	../xa/xa_db.c	/^__xa_del(dbp, txn, key, flags)$/
__xa_fd	../xa/xa_db.c	/^__xa_fd(dbp, fdp)$/
__xa_get	../xa/xa_db.c	/^__xa_get(dbp, txn, key, data, flags)$/
__xa_put	../xa/xa_db.c	/^__xa_put(dbp, txn, key, data, flags)$/
__xa_stat	../xa/xa_db.c	/^__xa_stat(dbp, spp, db_malloc, flags)$/
__xa_sync	../xa/xa_db.c	/^__xa_sync(dbp, flags)$/
__xa_txn_end	../xa/xa.c	/^__xa_txn_end(env)$/
__xa_txn_init	../xa/xa.c	/^__xa_txn_init(env, td, off)$/
_btree_ext_h_	../include/btree_ext.h	/^#define _btree_ext_h_$/
_clib_ext_h_	../include/clib_ext.h	/^#define _clib_ext_h_$/
_common_ext_h_	../include/common_ext.h	/^#define _common_ext_h_$/
_db_ext_h_	../include/db_ext.h	/^#define _db_ext_h_$/
_hash_ext_h_	../include/hash_ext.h	/^#define _hash_ext_h_$/
_lock_ext_h_	../include/lock_ext.h	/^#define _lock_ext_h_$/
_log_ext_h_	../include/log_ext.h	/^#define _log_ext_h_$/
_mp_ext_h_	../include/mp_ext.h	/^#define _mp_ext_h_$/
_mutex_ext_h_	../include/mutex_ext.h	/^#define _mutex_ext_h_$/
_os_ext_h_	../include/os_ext.h	/^#define _os_ext_h_$/
_txn_ext_h_	../include/txn_ext.h	/^#define _txn_ext_h_$/
_xa_ext_h_	../include/xa_ext.h	/^#define _xa_ext_h_$/
appinit	../include/db_cxx.h	/^\/\/ call appinit() before any other db activity (/
args_cmd	../test/utils.c	/^args_cmd(cd, interp, argc, argv)$/
bam_AUTO_H	../include/btree_auto.h	/^#define bam_AUTO_H$/
const	../include/db.h	/^#define	const$/
db185_close	../db185/db185.c	/^db185_close(db185p)$/
db185_del	../db185/db185.c	/^db185_del(db185p, key185, flags)$/
db185_fd	../db185/db185.c	/^db185_fd(db185p)$/
db185_get	../db185/db185.c	/^db185_get(db185p, key185, data185, flags)$/
db185_put	../db185/db185.c	/^db185_put(db185p, key185, data185, flags)$/
db185_seq	../db185/db185.c	/^db185_seq(db185p, key185, data185, flags)$/
db185_sync	../db185/db185.c	/^db185_sync(db185p, flags)$/
db_AUTO_H	../include/db_auto.h	/^#define db_AUTO_H$/
db_appexit	../common/db_appinit.c	/^db_appexit(dbenv)$/
db_appinit	../common/db_appinit.c	/^db_appinit(db_home, db_config, dbenv, flags)$/
db_del_cmd	../test/utils.c	/^db_del_cmd(interp, argc, argv, dbp)$/
db_get_cmd	../test/utils.c	/^db_get_cmd(interp, argc, argv, dbp)$/
db_getbin_cmd	../test/utils.c	/^db_getbin_cmd(interp, argc, argv, dbp)$/
db_join_cmd	../test/utils.c	/^db_join_cmd(interp, argc, argv, dbp)$/
db_jump_set	../os/os_config.c	/^db_jump_set(func, which)$/
db_open	../db/db.c	/^db_open(fname, type, flags, mode, dbenv, dbinfo, d/
db_put_cmd	../test/utils.c	/^db_put_cmd(interp, argc, argv, dbp)$/
db_putbin_cmd	../test/utils.c	/^db_putbin_cmd(interp, argc, argv, dbp)$/
db_value_set	../os/os_config.c	/^db_value_set(value, which)$/
db_version	../common/db_appinit.c	/^db_version(majverp, minverp, patchp)$/
db_xa_open	../xa/xa_db.c	/^db_xa_open(fname, type, flags, mode, dbinfo, dbpp)/
dbc_del_cmd	../test/utils.c	/^dbc_del_cmd(interp, argc, argv, dbc)$/
dbc_get_cmd	../test/utils.c	/^dbc_get_cmd(interp, argc, argv, dbc)$/
dbc_getbin_cmd	../test/utils.c	/^dbc_getbin_cmd(interp, argc, argv, dbc)$/
dbc_put_cmd	../test/utils.c	/^dbc_put_cmd(interp, argc, argv, dbc)$/
dbcursor_cmd	../test/utils.c	/^dbcursor_cmd(cd_dbc, interp, argc, argv)$/
dbenv_cmd	../test/utils.c	/^dbenv_cmd(notused, interp, argc, argv)$/
dbm_clearerr	../include/db.h	/^#define	dbm_clearerr(a)		__db_ndbm_clearerr(a)$/
dbm_close	../include/db.h	/^#define	dbm_close(a)		__db_ndbm_close(a)$/
dbm_delete	../include/db.h	/^#define	dbm_delete(a, b)	__db_ndbm_delete(a, b)$/
dbm_delete_cmd	../test/tcl_dbm.c	/^dbm_delete_cmd(notused, interp, argc, argv)$/
dbm_dirfno	../include/db.h	/^#define	dbm_dirfno(a)		__db_ndbm_dirfno(a)$/
dbm_error	../include/db.h	/^#define	dbm_error(a)		__db_ndbm_error(a)$/
dbm_fetch	../include/db.h	/^#define	dbm_fetch(a, b)		__db_ndbm_fetch(a, b)$/
dbm_fetch_cmd	../test/tcl_dbm.c	/^dbm_fetch_cmd(notused, interp, argc, argv)$/
dbm_first_cmd	../test/tcl_dbm.c	/^dbm_first_cmd(notused, interp, argc, argv)$/
dbm_firstkey	../include/db.h	/^#define	dbm_firstkey(a)		__db_ndbm_firstkey(a)$/
dbm_next_cmd	../test/tcl_dbm.c	/^dbm_next_cmd(notused, interp, argc, argv)$/
dbm_nextkey	../include/db.h	/^#define	dbm_nextkey(a)		__db_ndbm_nextkey(a)$/
dbm_open	../include/db.h	/^#define	dbm_open(a, b, c)	__db_ndbm_open(a, b, c)$/
dbm_pagfno	../include/db.h	/^#define	dbm_pagfno(a)		__db_ndbm_pagfno(a)$/
dbm_rdonly	../include/db.h	/^#define	dbm_rdonly(a)		__db_ndbm_rdonly(a)$/
dbm_store	../include/db.h	/^#define	dbm_store(a, b, c, d)	__db_ndbm_store(a, b/
dbm_store_cmd	../test/tcl_dbm.c	/^dbm_store_cmd(notused, interp, argc, argv)$/
dbmclose	../include/db.h	/^#define	dbmclose	__db_dbm_close$/
dbminit	../include/db.h	/^#define	dbminit(a)	__db_dbm_init(a)$/
dbminit_cmd	../test/tcl_dbm.c	/^dbminit_cmd(notused, interp, argc, argv)$/
dbopen	../db185/db185.c	/^dbopen(file, oflags, mode, type, openinfo)$/
dbopen_cmd	../test/utils.c	/^dbopen_cmd(notused, interp, argc, argv)$/
dbt_from_file	../test/utils.c	/^dbt_from_file(interp, file, dbt)$/
dbt_to_file	../test/utils.c	/^dbt_to_file(interp, file, dbt)$/
dbversion_cmd	../test/utils.c	/^dbversion_cmd(notused, interp, argc, notused2)$/
dbwidget_cmd	../test/utils.c	/^dbwidget_cmd(cd_dbp, interp, argc, argv)$/
dd_id	../include/lock.h	/^#define dd_id	wlinks._dd_id$/
debug_check	../test/utils.c	/^debug_check()$/
debugcheck_cmd	../test/utils.c	/^debugcheck_cmd(notused1, interp, argc, notused2)$/
delete	../include/db.h	/^#define	delete(a)	__db_dbm_delete(a)$/
dirfd	../clib/getcwd.c	/^#define   dirfd(dirp)     ((dirp)->dd_fd)$/
do_lockvec	../test/tcl_lock.c	/^do_lockvec(interp, mgr, argc, argv)$/
envwidget_cmd	../test/utils.c	/^envwidget_cmd(cd, interp, argc, argv)$/
envwidget_delcmd	../test/utils.c	/^envwidget_delcmd(cd)$/
err	../clib/err.c	/^err(eval, fmt, va_alist)$/
errx	../clib/err.c	/^errx(eval, fmt, va_alist)$/
fetch	../include/db.h	/^#define	fetch(a)	__db_dbm_fetch(a)$/
firstkey	../include/db.h	/^#define	firstkey	__db_dbm_firstkey$/
fsync	../os/os_fsync.c	/^#define	fsync(fd)	__mpe_fsync(fd);$/
get_long	../clib/getlong.c	/^get_long(p, min, max, storep)$/
get_lsn	../test/tcl_log.c	/^get_lsn(interp, str, lsnp)$/
getcwd	../clib/getcwd.c	/^getcwd(pt, size)$/
getopt	../clib/getopt.c	/^getopt(nargc, nargv, ostr)$/
ham_AUTO_H	../include/hash_auto.h	/^#define ham_AUTO_H$/
hcreate	../include/db.h	/^#define	hcreate(a)	__db_hcreate(a)$/
hcreate_cmd	../test/tcl_hsearch.c	/^hcreate_cmd(notused, interp, argc, argv)$/
hdestroy	../include/db.h	/^#define	hdestroy	__db_hdestroy$/
hdestroy_cmd	../test/tcl_hsearch.c	/^hdestroy_cmd(notused, interp, argc, argv)$/
heldby	../include/lock.h	/^#define	heldby	dlinks._heldby$/
holders	../include/lock.h	/^#define	holders	dlinks._holders$/
hsearch	../include/db.h	/^#define	hsearch(a, b)	__db_hsearch(a, b)$/
hsearch_cmd	../test/tcl_hsearch.c	/^hsearch_cmd(notused, interp, argc, argv)$/
imp	../include/db_cxx.h	/^\/\/ DEFINE_DB_CLASS defines an imp_ data member a/
int	../db/db_dispatch.c	/^static int (**dispatch_table) __P((DB_LOG *, DBT */
list_to_numarray	../test/utils.c	/^list_to_numarray(interp, str)$/
lock_close	../lock/lock_region.c	/^lock_close(lt)$/
lock_cmd	../test/tcl_lock.c	/^lock_cmd(cd_lock, interp, argc, argv)$/
lock_detect	../lock/lock_deadlock.c	/^lock_detect(lt, flags, atype)$/
lock_get	../lock/lock.c	/^lock_get(lt, locker, flags, obj, lock_mode, lock)$/
lock_id	../lock/lock.c	/^lock_id(lt, idp)$/
lock_open	../lock/lock_region.c	/^lock_open(path, flags, mode, dbenv, ltp)$/
lock_put	../lock/lock.c	/^lock_put(lt, lock)$/
lock_stat	../lock/lock_region.c	/^lock_stat(lt, gspp, db_malloc)$/
lock_tget	../lock/lock.c	/^lock_tget(lt, txn, flags, obj, lock_mode, lock)$/
lock_tvec	../lock/lock.c	/^lock_tvec(lt, txn, flags, list, nlist, elistp)$/
lock_unlink	../lock/lock_region.c	/^lock_unlink(path, force, dbenv)$/
lock_vec	../lock/lock.c	/^lock_vec(lt, locker, flags, list, nlist, elistp)$/
lockmgr_cmd	../test/tcl_lock.c	/^lockmgr_cmd(notused, interp, argc, argv)$/
lockunlink_cmd	../test/tcl_lock.c	/^lockunlink_cmd(notused, interp, argc, argv)$/
lockwidget_cmd	../test/tcl_lock.c	/^lockwidget_cmd(cd_mgr, interp, argc, argv)$/
log_AUTO_H	../include/log_auto.h	/^#define log_AUTO_H$/
log_archive	../log/log_archive.c	/^log_archive(dblp, listp, flags, db_malloc)$/
log_close	../log/log.c	/^log_close(dblp)$/
log_cmd	../test/tcl_log.c	/^log_cmd(notused, interp, argc, argv)$/
log_compare	../log/log_compare.c	/^log_compare(lsn0, lsn1)$/
log_compare_cmd	../test/tcl_log.c	/^log_compare_cmd(interp, argc, argv)$/
log_file	../log/log_put.c	/^log_file(dblp, lsn, namep, len)$/
log_file_cmd	../test/tcl_log.c	/^log_file_cmd(lp, interp, argc, argv)$/
log_flush	../log/log_put.c	/^log_flush(dblp, lsn)$/
log_flush_cmd	../test/tcl_log.c	/^log_flush_cmd(lp, interp, argc, argv)$/
log_get	../log/log_get.c	/^log_get(dblp, alsn, dbt, flags)$/
log_get_cmd	../test/tcl_log.c	/^log_get_cmd(lp, interp, argc, argv)$/
log_open	../log/log.c	/^log_open(path, flags, mode, dbenv, lpp)$/
log_put	../log/log_put.c	/^log_put(dblp, lsn, dbt, flags)$/
log_put_cmd	../test/tcl_log.c	/^log_put_cmd(lp, interp, argc, argv)$/
log_reg_cmd	../test/tcl_log.c	/^log_reg_cmd(lp, interp, argc, argv)$/
log_register	../log/log_register.c	/^log_register(dblp, dbp, name, type, idp)$/
log_stat	../log/log.c	/^log_stat(dblp, gspp, db_malloc)$/
log_unlink	../log/log.c	/^log_unlink(path, force, dbenv)$/
log_unregister	../log/log_register.c	/^log_unregister(dblp, fid)$/
logunlink_cmd	../test/tcl_log.c	/^logunlink_cmd(notused, interp, argc, argv)$/
logwidget_cmd	../test/tcl_log.c	/^logwidget_cmd(cd_lp, interp, argc, argv)$/
m	../test/tcl_mutex.c	/^#define	m	u.r.real_m$/
memcmp	../clib/memcmp.c	/^memcmp(s1, s2, n)$/
memp_close	../mp/mp_open.c	/^memp_close(dbmp)$/
memp_cmd	../test/tcl_mpool.c	/^memp_cmd(notused, interp, argc, argv)$/
memp_fclose	../mp/mp_fopen.c	/^memp_fclose(dbmfp)$/
memp_fget	../mp/mp_fget.c	/^memp_fget(dbmfp, pgnoaddr, flags, addrp)$/
memp_fopen	../mp/mp_fopen.c	/^memp_fopen(dbmp, path, flags, mode, pagesize, finf/
memp_fput	../mp/mp_fput.c	/^memp_fput(dbmfp, pgaddr, flags)$/
memp_fset	../mp/mp_fset.c	/^memp_fset(dbmfp, pgaddr, flags)$/
memp_fsync	../mp/mp_sync.c	/^memp_fsync(dbmfp)$/
memp_open	../mp/mp_open.c	/^memp_open(path, flags, mode, dbenv, retp)$/
memp_register	../mp/mp_open.c	/^memp_register(dbmp, ftype, pgin, pgout)$/
memp_stat	../mp/mp_pr.c	/^memp_stat(dbmp, gspp, fspp, db_malloc)$/
memp_sync	../mp/mp_sync.c	/^memp_sync(dbmp, lsnp)$/
memp_trickle	../mp/mp_sync.c	/^memp_trickle(dbmp, pct, nwrotep)$/
memp_unlink	../mp/mp_open.c	/^memp_unlink(path, force, dbenv)$/
mempunlink_cmd	../test/tcl_mpool.c	/^mempunlink_cmd(notused, interp, argc, argv)$/
mpf_cmd	../test/tcl_mpool.c	/^mpf_cmd(cd_mfi, interp, argc, argv)$/
mpwidget_cmd	../test/tcl_mpool.c	/^mpwidget_cmd(cd_mp, interp, argc, argv)$/
mutex_cmd	../test/tcl_mutex.c	/^mutex_cmd(notused, interp, argc, argv)$/
mutexunlink_cmd	../test/tcl_mutex.c	/^mutexunlink_cmd(notused, interp, argc, argv)$/
mutexwidget_cmd	../test/tcl_mutex.c	/^mutexwidget_cmd(cd_md, interp, argc, argv)$/
ndbmopen_cmd	../test/tcl_ndbm.c	/^ndbmopen_cmd(notused, interp, argc, argv)$/
ndbmwidget_cmd	../test/tcl_ndbm.c	/^ndbmwidget_cmd(cd_dbm, interp, argc, argv)$/
nextkey	../include/db.h	/^#define	nextkey(a)	__db_dbm_nextkey(a)$/
pgno_t	../include/db_185.h	/^#define	pgno_t	db_pgno_t$/
pgwidget_cmd	../test/tcl_mpool.c	/^pgwidget_cmd(cd_page, interp, argc, argv)$/
process_am_options	../test/utils.c	/^process_am_options(interp, argc, argv, openinfo)$/
process_env_options	../test/utils.c	/^process_env_options(interp, argc, argv, envinfo)$/
raise	../clib/raise.c	/^raise(s)$/
rand_cmd	../test/utils.c	/^rand_cmd(notused, interp, argc, argv)$/
randomint_cmd	../test/utils.c	/^randomint_cmd(notused, interp, argc, argv)$/
set_get_result	../test/utils.c	/^set_get_result(interp, dbt)$/
snprintf	../clib/snprintf.c	/^snprintf(str, n, fmt, va_alist)$/
srand_cmd	../test/utils.c	/^srand_cmd(notused, interp, argc, argv)$/
stamp_cmd	../test/utils.c	/^stamp_cmd(notused, interp, argc, argv)$/
store	../include/db.h	/^#define	store(a, b)	__db_dbm_store(a, b)$/
strerror	../clib/strerror.c	/^strerror(num)$/
strsep	../clib/strsep.c	/^strsep(stringp, delim)$/
txn_AUTO_H	../include/txn_auto.h	/^#define txn_AUTO_H$/
txn_abort	../txn/txn.c	/^txn_abort(txnp)$/
txn_begin	../txn/txn.c	/^txn_begin(tmgrp, parent, txnpp)$/
txn_checkpoint	../txn/txn.c	/^txn_checkpoint(mgr, kbytes, minutes)$/
txn_close	../txn/txn.c	/^txn_close(tmgrp)$/
txn_cmd	../test/tcl_txn.c	/^txn_cmd(cd_txn, interp, argc, argv)$/
txn_commit	../txn/txn.c	/^txn_commit(txnp)$/
txn_id	../txn/txn.c	/^txn_id(txnp)$/
txn_open	../txn/txn.c	/^txn_open(path, flags, mode, dbenv, mgrpp)$/
txn_prepare	../txn/txn.c	/^txn_prepare(txnp)$/
txn_stat	../txn/txn.c	/^txn_stat(mgr, statp, db_malloc)$/
txn_unlink	../txn/txn.c	/^txn_unlink(path, force, dbenv)$/
txnmgr_cmd	../test/tcl_txn.c	/^txnmgr_cmd(notused, interp, argc, argv)$/
txnunlink_cmd	../test/tcl_txn.c	/^txnunlink_cmd(notused, interp, argc, argv)$/
txnwidget_cmd	../test/tcl_txn.c	/^txnwidget_cmd(cd_mgr, interp, argc, argv)$/
unwrap	../include/cxx_int.h	/^\/\/ back and forth using the various overloaded w/
val	../test/tcl_mutex.c	/^#define	val	u.r.real_val$/
vsnprintf	../clib/vsnprintf.c	/^vsnprintf(str, n, fmt, ap)$/
waiters	../include/lock.h	/^#define	waiters	wlinks._waiters$/
warn	../clib/err.c	/^warn(fmt, va_alist)$/
warnx	../clib/err.c	/^warnx(fmt, va_alist)$/
wmask	../clib/memmove.c	/^#define	wmask	(wsize - 1)$/
wsize	../clib/memmove.c	/^#define	wsize	sizeof(word)$/
